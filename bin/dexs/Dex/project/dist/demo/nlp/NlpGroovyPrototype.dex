<dex-project version="0.8">
   <tasks class="java.util.ArrayList">
      <task-item name="Text Input" active="true">
         <task class="com.dexvis.dex.task.input.TextInput">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <inputText>When airport foreman Scott Babcock went out onto the runway at Wiley Post-Will Rogers Memorial Airport in Utqiagvik, Alaska, on Monday to clear some snow, he was surprised to find a visitor waiting for him on the asphalt: a 450-pound bearded seal chilling in the milky sunshine.
“It was very strange to see the seal. I’ve seen a lot of things on runways, but never a seal,” Babcock told ABC News. His footage of the hefty mammal went viral after he posted it on Facebook.
According to local TV station KTVA, animal control was called in and eventually moved the seal with the help of a “sled.”
Normal air traffic soon resumed, the station said.
Poking fun at the seal’s surprise appearance, the Alaska Department of Transportation warned pilots on Tuesday of  “low sealings” in the North Slope region — a pun on “low ceilings,” a term used to describe low clouds and poor visibility.
Though this was the first seal sighting on the runway at the airport, the department said other animals, including birds, caribou and polar bears, have been spotted there in the past.
“Wildlife strikes to aircraft pose a significant safety hazard and cost the aviation industry hundreds of millions of dollars each year,” department spokeswoman Meadow Bailey told the Associated Press. “Birds make up over 90 percent of strikes in the U.S., while mammal strikes are rare.</inputText>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Normalizer" active="true">
         <task class="com.dexvis.dex.task.prg.GroovyScript">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <processbytable>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Table&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbytable>
            <processbyrow>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Row&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbyrow>
            <processbycolumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Column&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbycolumn>
            <groovyCode class="javafx.beans.property.SimpleStringProperty">import smile.nlp.normalizer.SimpleNormalizer

String text = data.collect { row -&gt; return row[1] }.join(&apos;\n&apos;)
String normalizedText = SimpleNormalizer.newInstance().normalize(text)

header = [ &quot;text&quot;, &quot;normalized text&quot; ]
data = [[ text, normalizedText ]]</groovyCode>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Sentence Splitter" active="true">
         <task class="com.dexvis.dex.task.prg.GroovyScript">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <processbytable>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Table&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbytable>
            <processbyrow>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Row&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbyrow>
            <processbycolumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Column&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbycolumn>
            <groovyCode class="javafx.beans.property.SimpleStringProperty">import smile.nlp.tokenizer.SimpleSentenceSplitter

header = [ &quot;Sentences&quot; ]
def sentences = SimpleSentenceSplitter.getInstance().split(data[0][1])
data = []
sentences.each { data &lt;&lt; [ it ] }</groovyCode>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Replace All" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.ReplaceAll">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <replace>[,&apos;&quot;\.]</replace>
            <with></with>
         </task>
      </task-item>
      <task-item name="Groovy Script" active="true">
         <task class="com.dexvis.dex.task.prg.GroovyScript">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <processbytable>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Table&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbytable>
            <processbyrow>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Row&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbyrow>
            <processbycolumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Column&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbycolumn>
            <groovyCode class="javafx.beans.property.SimpleStringProperty">import smile.nlp.tokenizer.SimpleTokenizer
import smile.nlp.stemmer.LancasterStemmer
import smile.nlp.stemmer.PorterStemmer

header = [ &quot;Word&quot;, &quot;Lancaster Stemmer&quot;, &quot;Porter Stemmer&quot; ]

def text = data.collect { return it[0] }.join(&apos; &apos;)
def tokenizer = new SimpleTokenizer()
def lStemmer = new LancasterStemmer()
def pStemmer = new PorterStemmer()
def words = tokenizer.split(text)

data = []
words.each { data &lt;&lt; [ it as String, lStemmer.stem(it), pStemmer.stem(it) ] }</groovyCode>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Sankey Diagram" active="true">
         <task class="com.dexvis.dex.task.vis.dexjs.Sankey">
            <config-def>{&quot;sankey&quot;:{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Sankey Settings&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Chart Dimensions&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Height&quot;,&quot;description&quot;:&quot;The height of the chart.&quot;,&quot;target&quot;:&quot;height&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:&quot;100%&quot;},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The width of the chart.&quot;,&quot;target&quot;:&quot;width&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:&quot;100%&quot;},{&quot;name&quot;:&quot;Top Margin&quot;,&quot;description&quot;:&quot;The top margin of the chart.&quot;,&quot;target&quot;:&quot;margin.top&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;Bottom Margin&quot;,&quot;description&quot;:&quot;The bottom margin of the chart.&quot;,&quot;target&quot;:&quot;margin.bottom&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;Left Margin&quot;,&quot;description&quot;:&quot;Left top margin of the chart.&quot;,&quot;target&quot;:&quot;margin.left&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;Right Margin&quot;,&quot;description&quot;:&quot;The right margin of the chart.&quot;,&quot;target&quot;:&quot;margin.right&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the chart.&quot;,&quot;target&quot;:&quot;transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General Options&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Resizable&quot;,&quot;description&quot;:&quot;This determines whether the chart is resizable or not.&quot;,&quot;target&quot;:&quot;resizable&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Draggable&quot;,&quot;description&quot;:&quot;This determines whether the chart is draggable or not.&quot;,&quot;target&quot;:&quot;draggable&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Links&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Links: Normal&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;link.normal.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;link.normal.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;link.normal.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The with (in pixels) of the stroke.&quot;,&quot;target&quot;:&quot;link.normal.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;This control allows the user to select the color by name, or &apos;none&apos;.&quot;,&quot;target&quot;:&quot;link.normal.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color, this control allows the selection of any color.&quot;,&quot;target&quot;:&quot;link.normal.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;link.normal.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0.05},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;link.normal.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;link.normal.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;link.normal.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;link.normal.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;link.normal.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Links: Emphasis&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;link.emphasis.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;link.emphasis.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;link.emphasis.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The with (in pixels) of the stroke.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;This control allows the user to select the color by name, or &apos;none&apos;.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;green&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color, this control allows the selection of any color.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;green&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0.5},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;link.emphasis.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text: Normal&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the text.&quot;,&quot;target&quot;:&quot;label.normal.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Format&quot;,&quot;description&quot;:&quot;The text format.&quot;,&quot;target&quot;:&quot;label.normal.format&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Anchor&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;label.normal.anchor&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;middle&quot;,&quot;start&quot;,&quot;end&quot;],&quot;initialValue&quot;:&quot;start&quot;},{&quot;name&quot;:&quot;X Offset&quot;,&quot;description&quot;:&quot;The x offset of the text.&quot;,&quot;target&quot;:&quot;label.normal.dx&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Y Offset&quot;,&quot;description&quot;:&quot;The y offset of the text.&quot;,&quot;target&quot;:&quot;label.normal.dy&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Text Decoration&quot;,&quot;description&quot;:&quot;The text decoration.&quot;,&quot;target&quot;:&quot;label.normal.decoration&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;underline&quot;,&quot;overline&quot;,&quot;line-through&quot;,&quot;blink&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Writing Mode&quot;,&quot;description&quot;:&quot;The text writing mode family.&quot;,&quot;target&quot;:&quot;label.normal.writingMode&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;lr-tb&quot;,&quot;rl-tb&quot;,&quot;tb-rl&quot;,&quot;lr&quot;,&quot;rl&quot;,&quot;tb&quot;],&quot;initialValue&quot;:&quot;inherit&quot;},{&quot;name&quot;:&quot;Text Length&quot;,&quot;description&quot;:&quot;The text length.&quot;,&quot;target&quot;:&quot;label.normal.textLength&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:500,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Length Adjust&quot;,&quot;description&quot;:&quot;The text length adjustment.&quot;,&quot;target&quot;:&quot;label.normal.lengthAdjust&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;&quot;,&quot;spacing&quot;,&quot;spacingAndGlyphs&quot;],&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Font&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The size of the font.&quot;,&quot;target&quot;:&quot;label.normal.font.size&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:128,&quot;initialValue&quot;:16},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;label.normal.font.family&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;Arial Black&quot;,&quot;Arial Narrow&quot;,&quot;Arial Rounded MT Bold&quot;,&quot;Book Antiqua&quot;,&quot;Bookman Old Style&quot;,&quot;Brush Script MT&quot;,&quot;Chalkboard&quot;,&quot;Courier New&quot;,&quot;Didot&quot;,&quot;Garamond&quot;,&quot;Georgia&quot;,&quot;Goudy Old Style&quot;,&quot;Helvetica Neue&quot;,&quot;Impact&quot;,&quot;Lucida Grande&quot;,&quot;Lucida Sans Unicode&quot;,&quot;Marker Felt&quot;,&quot;Times New Roman&quot;,&quot;Verdana&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;cursive&quot;,&quot;fantasy&quot;,&quot;monospace&quot;,&quot;sans-serif&quot;,&quot;serif&quot;,&quot;times-roman&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The font style.&quot;,&quot;target&quot;:&quot;label.normal.font.style&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the font.&quot;,&quot;target&quot;:&quot;weight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Variant&quot;,&quot;description&quot;:&quot;The font variant.&quot;,&quot;target&quot;:&quot;variant&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;inherit&quot;,&quot;small-caps&quot;],&quot;initialValue&quot;:&quot;normal&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;label.normal.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;grey&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;label.normal.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;label.normal.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The with (in pixels) of the stroke.&quot;,&quot;target&quot;:&quot;label.normal.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;This control allows the user to select the color by name, or &apos;none&apos;.&quot;,&quot;target&quot;:&quot;label.normal.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color, this control allows the selection of any color.&quot;,&quot;target&quot;:&quot;label.normal.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;label.normal.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;label.normal.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;label.normal.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;label.normal.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;label.normal.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;label.normal.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text: Emphasis&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the text.&quot;,&quot;target&quot;:&quot;label.emphasis.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Format&quot;,&quot;description&quot;:&quot;The text format.&quot;,&quot;target&quot;:&quot;label.emphasis.format&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Anchor&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;label.emphasis.anchor&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;middle&quot;,&quot;start&quot;,&quot;end&quot;],&quot;initialValue&quot;:&quot;start&quot;},{&quot;name&quot;:&quot;X Offset&quot;,&quot;description&quot;:&quot;The x offset of the text.&quot;,&quot;target&quot;:&quot;label.emphasis.dx&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Y Offset&quot;,&quot;description&quot;:&quot;The y offset of the text.&quot;,&quot;target&quot;:&quot;label.emphasis.dy&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Text Decoration&quot;,&quot;description&quot;:&quot;The text decoration.&quot;,&quot;target&quot;:&quot;label.emphasis.decoration&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;underline&quot;,&quot;overline&quot;,&quot;line-through&quot;,&quot;blink&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Writing Mode&quot;,&quot;description&quot;:&quot;The text writing mode family.&quot;,&quot;target&quot;:&quot;label.emphasis.writingMode&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;lr-tb&quot;,&quot;rl-tb&quot;,&quot;tb-rl&quot;,&quot;lr&quot;,&quot;rl&quot;,&quot;tb&quot;],&quot;initialValue&quot;:&quot;inherit&quot;},{&quot;name&quot;:&quot;Text Length&quot;,&quot;description&quot;:&quot;The text length.&quot;,&quot;target&quot;:&quot;label.emphasis.textLength&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:500,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Length Adjust&quot;,&quot;description&quot;:&quot;The text length adjustment.&quot;,&quot;target&quot;:&quot;label.emphasis.lengthAdjust&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;&quot;,&quot;spacing&quot;,&quot;spacingAndGlyphs&quot;],&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Font&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The size of the font.&quot;,&quot;target&quot;:&quot;label.emphasis.font.size&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:128,&quot;initialValue&quot;:20},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;label.emphasis.font.family&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;Arial Black&quot;,&quot;Arial Narrow&quot;,&quot;Arial Rounded MT Bold&quot;,&quot;Book Antiqua&quot;,&quot;Bookman Old Style&quot;,&quot;Brush Script MT&quot;,&quot;Chalkboard&quot;,&quot;Courier New&quot;,&quot;Didot&quot;,&quot;Garamond&quot;,&quot;Georgia&quot;,&quot;Goudy Old Style&quot;,&quot;Helvetica Neue&quot;,&quot;Impact&quot;,&quot;Lucida Grande&quot;,&quot;Lucida Sans Unicode&quot;,&quot;Marker Felt&quot;,&quot;Times New Roman&quot;,&quot;Verdana&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;cursive&quot;,&quot;fantasy&quot;,&quot;monospace&quot;,&quot;sans-serif&quot;,&quot;serif&quot;,&quot;times-roman&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The font style.&quot;,&quot;target&quot;:&quot;label.emphasis.font.style&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the font.&quot;,&quot;target&quot;:&quot;weight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Variant&quot;,&quot;description&quot;:&quot;The font variant.&quot;,&quot;target&quot;:&quot;variant&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;inherit&quot;,&quot;small-caps&quot;],&quot;initialValue&quot;:&quot;normal&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;label.emphasis.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;grey&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;label.emphasis.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;label.emphasis.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The with (in pixels) of the stroke.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;This control allows the user to select the color by name, or &apos;none&apos;.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color, this control allows the selection of any color.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;label.emphasis.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Nodes&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Rectangle: Normal&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Height&quot;,&quot;description&quot;:&quot;This determines the height of the rectangle.&quot;,&quot;target&quot;:&quot;node.normal.height&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;This determines the width of the rectangle.&quot;,&quot;target&quot;:&quot;node.normal.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:20},{&quot;name&quot;:&quot;X Radius&quot;,&quot;description&quot;:&quot;The x radius.&quot;,&quot;target&quot;:&quot;node.normal.rx&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Y Radius&quot;,&quot;description&quot;:&quot;The y radius.&quot;,&quot;target&quot;:&quot;node.normal.ry&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the rectangle.&quot;,&quot;target&quot;:&quot;node.normal.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;node.normal.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;node.normal.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;node.normal.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The with (in pixels) of the stroke.&quot;,&quot;target&quot;:&quot;node.normal.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;This control allows the user to select the color by name, or &apos;none&apos;.&quot;,&quot;target&quot;:&quot;node.normal.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color, this control allows the selection of any color.&quot;,&quot;target&quot;:&quot;node.normal.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;node.normal.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0.2},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;node.normal.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;node.normal.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;node.normal.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;node.normal.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;node.normal.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Rectangle: Emphasis&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Height&quot;,&quot;description&quot;:&quot;This determines the height of the rectangle.&quot;,&quot;target&quot;:&quot;node.emphasis.height&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;This determines the width of the rectangle.&quot;,&quot;target&quot;:&quot;node.emphasis.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;X Radius&quot;,&quot;description&quot;:&quot;The x radius.&quot;,&quot;target&quot;:&quot;node.emphasis.rx&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Y Radius&quot;,&quot;description&quot;:&quot;The y radius.&quot;,&quot;target&quot;:&quot;node.emphasis.ry&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the rectangle.&quot;,&quot;target&quot;:&quot;node.emphasis.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;node.emphasis.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;node.emphasis.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;node.emphasis.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The with (in pixels) of the stroke.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;This control allows the user to select the color by name, or &apos;none&apos;.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;green&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color, this control allows the selection of any color.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;green&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0.5},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;node.emphasis.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Miscellaneous&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Color Scheme&quot;,&quot;description&quot;:&quot;The color scheme.&quot;,&quot;target&quot;:&quot;palette&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;ECharts&quot;,&quot;category10&quot;,&quot;category20b&quot;,&quot;category20c&quot;,&quot;category20&quot;,&quot;c64Dark&quot;,&quot;c64Light&quot;,&quot;divergingDark12&quot;,&quot;divergingPastel12&quot;,&quot;hueSoft128&quot;,&quot;hueHard128&quot;,&quot;crayola8&quot;,&quot;crayola120&quot;,&quot;YlGn_9&quot;,&quot;YlGnBu_9&quot;,&quot;GnBu_9&quot;,&quot;BuGn_9&quot;,&quot;PuBuGn_9&quot;,&quot;PuBu_9&quot;,&quot;BuPu_9&quot;,&quot;RdPu_9&quot;,&quot;PuRd_9&quot;,&quot;OrRd_9&quot;,&quot;YlOrRd_9&quot;,&quot;YlOrBr_9&quot;,&quot;Purples_9&quot;,&quot;Blues_9&quot;,&quot;Greens_9&quot;,&quot;Oranges_9&quot;,&quot;Reds_9&quot;,&quot;Greys_9&quot;,&quot;PuOr_11&quot;,&quot;BrBG_11&quot;,&quot;PRGn_11&quot;,&quot;PiYG_11&quot;,&quot;RdBu_11&quot;,&quot;RdGy_11&quot;,&quot;RdYlBu_11&quot;,&quot;Spectral_4&quot;,&quot;Spectral_8&quot;,&quot;Spectral_11&quot;,&quot;RdYlGn_11&quot;,&quot;Accent_8&quot;,&quot;Dark2_8&quot;,&quot;Paired_12&quot;,&quot;Pastel1_9&quot;,&quot;Pastel2_8&quot;,&quot;Set1_9&quot;,&quot;Set2_8&quot;,&quot;Set3_12&quot;,&quot;Stop Light&quot;,&quot;White to Red&quot;,&quot;White to Blue&quot;,&quot;Red White and Blue&quot;],&quot;initialValue&quot;:&quot;ECharts&quot;},{&quot;name&quot;:&quot;Units&quot;,&quot;description&quot;:&quot;The units text.&quot;,&quot;target&quot;:&quot;units&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;UNITS&quot;},{&quot;name&quot;:&quot;Layout Iterations&quot;,&quot;description&quot;:&quot;The number of iterations to spend trying to optimize the layout.&quot;,&quot;target&quot;:&quot;iterations&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:400,&quot;initialValue&quot;:32},{&quot;name&quot;:&quot;Aggregate Links&quot;,&quot;description&quot;:&quot;Aggregate multiple links with same source/target into 1.&quot;,&quot;target&quot;:&quot;aggregate&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true}]}]}}</config-def>
         </task>
      </task-item>
   </tasks>
</dex-project>