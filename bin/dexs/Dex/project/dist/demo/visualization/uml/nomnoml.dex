<dex-project version="0.8">
   <tasks class="java.util.ArrayList">
      <task-item name="Documentation" active="true">
         <task class="com.dexvis.dex.task.utilities.Documentation">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <editor>&lt;html dir=&quot;ltr&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body contenteditable=&quot;true&quot;&gt;&lt;h1&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;6&quot;&gt;Nomnoml UML Support&lt;/font&gt;&lt;/h1&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Nomnoml support is currently experimental. &amp;nbsp;I am evaluating canvas vs svg and getting a feel for how useful the features are.&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Canvas is limited to 32,000 pixels limitations in width and height. &amp;nbsp;This limit tends to get hit quickly, so I am leaning towards SVG only.&lt;/font&gt;&lt;/p&gt;&lt;h2&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Flow Overview&lt;/font&gt;&lt;/h2&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;This flow reads in game of thrones data, does some cleanup and selects the location/attacker/defender data from the csv.&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Each location is then partitioned into it&apos;s own container and attackers are associated with the defenders within each location partition.&lt;/font&gt;&lt;/p&gt;&lt;h2&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;5&quot;&gt;General Comments&lt;/font&gt;&lt;/h2&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Since I have not yet commited this component inside of Dex proper, it is viewed via a chrome co-browser. &amp;nbsp;Or simply point your&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;browser to the output/nomnoml.html directory where you installed Dex.&lt;/font&gt;&lt;/p&gt;&lt;h2&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;5&quot;&gt;Useful Groovy Scripts&lt;/font&gt;&lt;/h2&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;There are a number of groovy scripts which generate alternate UML diagrams.&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;AssociatedDirectedGraph.groovy - Column 1 is associated with Column 2 and annotated by Column 3&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;AssociateRow.groovy - All columns in a row are associated with each other.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;DirectedGraph - Column 1 is associated with column 2 with no annotations.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;EncapsulatedDG - Column 1 is used as an encapsulating group and column 2 is associated with column 3.&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/p&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</editor>
            <docFileText></docFileText>
         </task>
      </task-item>
      <task-item name="Read CSV" active="true">
         <task class="com.dexvis.dex.task.input.ReadCsv">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <fileText>data\thrones.csv</fileText>
            <limitRows>false</limitRows>
            <filterCB>false</filterCB>
            <rowLimitText>0</rowLimitText>
            <filter></filter>
            <lastDir>C:\dex2ws\Dex\data</lastDir>
         </task>
      </task-item>
      <task-item name="Trim Columns" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.TrimColumns">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Select Columns" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.SelectColumns">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <columnList>&lt;com.dexvis.simple.types.SimpleListSelectionView&gt;
  &lt;sourceList&gt;
    &lt;string&gt;year&lt;/string&gt;
    &lt;string&gt;battle_number&lt;/string&gt;
    &lt;string&gt;attacker_2&lt;/string&gt;
    &lt;string&gt;attacker_3&lt;/string&gt;
    &lt;string&gt;attacker_4&lt;/string&gt;
    &lt;string&gt;defender_1&lt;/string&gt;
    &lt;string&gt;defender_2&lt;/string&gt;
    &lt;string&gt;defender_3&lt;/string&gt;
    &lt;string&gt;defender_4&lt;/string&gt;
    &lt;string&gt;battle_type&lt;/string&gt;
    &lt;string&gt;major_death&lt;/string&gt;
    &lt;string&gt;major_capture&lt;/string&gt;
    &lt;string&gt;attacker_size&lt;/string&gt;
    &lt;string&gt;defender_size&lt;/string&gt;
    &lt;string&gt;defender_commander&lt;/string&gt;
    &lt;string&gt;summer&lt;/string&gt;
    &lt;string&gt;region&lt;/string&gt;
    &lt;string&gt;note&lt;/string&gt;
    &lt;string&gt;name&lt;/string&gt;
    &lt;string&gt;attacker_1&lt;/string&gt;
    &lt;string&gt;attacker_commander&lt;/string&gt;
    &lt;string&gt;attacker_outcome&lt;/string&gt;
  &lt;/sourceList&gt;
  &lt;targetList&gt;
    &lt;string&gt;location&lt;/string&gt;
    &lt;string&gt;attacker_king&lt;/string&gt;
    &lt;string&gt;defender_king&lt;/string&gt;
  &lt;/targetList&gt;
&lt;/com.dexvis.simple.types.SimpleListSelectionView&gt;</columnList>
         </task>
      </task-item>
      <task-item name="Groovy Filter" active="true">
         <task class="com.dexvis.dex.task.utilities.GroovyFilter">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <operationCB>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;INCLUDE&lt;/string&gt;
      &lt;string&gt;EXCLUDE&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;EXCLUDE&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</operationCB>
            <conditionCB>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;IF&lt;/string&gt;
      &lt;string&gt;UNLESS&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;IF&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</conditionCB>
            <groovyExpText>col.attacker_king == &quot;&quot; || col.defender_king == &quot;&quot;</groovyExpText>
         </task>
      </task-item>
      <task-item name="Encapsulated DG" active="true">
         <task class="com.dexvis.dex.task.prg.GroovyScript">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <processbytable>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Table&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbytable>
            <processbyrow>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Row&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbyrow>
            <processbycolumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Column&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbycolumn>
            <groovyCode class="javafx.beans.property.SimpleStringProperty">def newData = []

newData &lt;&lt; [ &quot;#direction: right&quot; ]

def cat = [:]

data.eachWithIndex {
  row, ri -&gt;

  if (!cat[row[0]]) {
    cat[row[0]] = []
  }
  cat[row[0]] &lt;&lt; &quot;[${row[1]}] -&gt; [${row[2]}]&quot;
}

cat.each {
  key, value -&gt;
  newData &lt;&lt; [ &quot;[${key}|&quot; ]
  value.each {
    v -&gt;
    newData &lt;&lt; [ v ]
  }
  newData &lt;&lt; [ &quot;]&quot; ]
}

header = [ &quot;cmd&quot; ]
data = newData;</groovyCode>
         </task>
      </task-item>
      <task-item name="Web Driver" active="true">
         <task class="com.dexvis.dex.task.base.WebDriverTask">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <templateText>web\uml\Nomnoml_svg_source.gtmpl</templateText>
            <outputFileText>output/nomnoml.html</outputFileText>
            <firefoxBrowser>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Firefox&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</firefoxBrowser>
            <chromeBrowser>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Chrome&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</chromeBrowser>
         </task>
      </task-item>
   </tasks>
</dex-project>