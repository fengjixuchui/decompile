<dex-project version="0.8">
   <tasks class="java.util.ArrayList">
      <task-item name="Documentation" active="true">
         <task class="com.dexvis.dex.task.utilities.Documentation">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <editor>&lt;html dir=&quot;ltr&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body contenteditable=&quot;true&quot;&gt;&lt;h1&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;6&quot;&gt;Bump Chart&lt;/font&gt;&lt;/h1&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;This example demonstrates the Bump Chart, adapted from code by James Curley.&lt;/font&gt;&lt;/p&gt;&lt;p&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Documentation - This documentation.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Read CSV - Read in some data related to crime.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Rename Column - A groovy script which renames a column incompatible with SQL.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Create Jdbc Table - Create an in memory Jdbc Table out of the data.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Query Jdbc - Query the data, group by state and year, sum all types of crime by state/year.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;View Data - Visual checkpoint&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Rank - Since the in memory HSQL engine lacks ranking and partitioning functions, we take advantage of the fact that our query ordered the data and add the ranking via a few lines of groovy. &amp;nbsp;Alternately, I could have switched to a DB which provides ranking/partitioning, but the external db dependency would probably be overkill for our needs.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;View Data - Visual checkpoing&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Select Columns - Select the columns in the order the bump chart will expect them: Category, Sequence, Ranking; where category is state, the sequence is by year, and the ranking is from least to most number of crimes for that year.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Bump Chart - Our visualization!&lt;/font&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot;&gt;Be sure to execute the flow, then right mouse click the Bump Chart task and play around with the various configuration options.&lt;/font&gt;&lt;/p&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</editor>
            <docFileText></docFileText>
         </task>
      </task-item>
      <task-item name="Read CSV" active="true">
         <task class="com.dexvis.dex.task.input.ReadCsv">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <fileText>data\CrimeStatebyState.csv</fileText>
            <limitRows>false</limitRows>
            <rowLimitText>0</rowLimitText>
            <lastDir></lastDir>
         </task>
      </task-item>
      <task-item name="Rename Column" active="true">
         <task class="com.dexvis.dex.task.prg.GroovyScript">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <processbytable>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Table&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbytable>
            <processbyrow>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Row&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbyrow>
            <processbycolumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Column&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbycolumn>
            <groovyCode class="javafx.beans.property.SimpleStringProperty">header[4] = &quot;NUM_CRIMES&quot;</groovyCode>
         </task>
      </task-item>
      <task-item name="Create Jdbc Table" active="true">
         <task class="com.dexvis.dex.task.database.CreateJdbcTable">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <dbtype>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;Oracle&lt;/string&gt;
      &lt;string&gt;MySql&lt;/string&gt;
      &lt;string&gt;Sqlite&lt;/string&gt;
      &lt;string&gt;Neo4J&lt;/string&gt;
      &lt;string&gt;HyperSql&lt;/string&gt;
      &lt;string&gt;Other&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;HyperSql&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</dbtype>
            <driver>org.hsqldb.jdbc.JDBCDriver</driver>
            <url>jdbc:hsqldb:mem:csvdb</url>
            <password></password>
            <username>sa</username>
            <table>CRIMES</table>
            <batch>false</batch>
            <right_sizing>false</right_sizing>
            <strict>true</strict>
            <string_min>16</string_min>
            <string_max>256</string_max>
         </task>
      </task-item>
      <task-item name="Query Jdbc" active="true">
         <task class="com.dexvis.dex.task.database.QueryJdbc">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <sqlScript class="javafx.beans.property.SimpleStringProperty">SELECT
    STATE,
    YEAR,
    SUM(NUM_CRIMES) AS NUM_CRIMES
  FROM CRIMES
  GROUP BY STATE, YEAR
  ORDER BY YEAR, NUM_CRIMES</sqlScript>
            <dbtype>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;HyperSql&lt;/string&gt;
      &lt;string&gt;Oracle&lt;/string&gt;
      &lt;string&gt;MySql&lt;/string&gt;
      &lt;string&gt;Sqlite&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;HyperSql&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</dbtype>
            <driver>org.hsqldb.jdbc.JDBCDriver</driver>
            <url>jdbc:hsqldb:mem:csvdb</url>
            <password></password>
            <username>sa</username>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Rank" active="true">
         <task class="com.dexvis.dex.task.prg.GroovyScript">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <processbytable>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Table&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbytable>
            <processbyrow>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Row&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbyrow>
            <processbycolumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Column&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbycolumn>
            <groovyCode class="javafx.beans.property.SimpleStringProperty">header &lt;&lt; &quot;RANKING&quot;

def counter = 0;
def years = [:]
data.eachWithIndex {
  row, ri -&gt;
  if (years[row[1]])
  {
    counter++;
    data[ri] &lt;&lt; counter;
  }
  else
  {
    counter = 1;
    years[row[1]] = 1;
    data[ri] &lt;&lt; counter;
  }
}</groovyCode>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Select Columns" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.SelectColumns">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <columnList>&lt;com.dexvis.simple.types.SimpleListSelectionView&gt;
  &lt;sourceList&gt;
    &lt;string&gt;NUM_CRIMES&lt;/string&gt;
  &lt;/sourceList&gt;
  &lt;targetList&gt;
    &lt;string&gt;STATE&lt;/string&gt;
    &lt;string&gt;YEAR&lt;/string&gt;
    &lt;string&gt;RANKING&lt;/string&gt;
  &lt;/targetList&gt;
&lt;/com.dexvis.simple.types.SimpleListSelectionView&gt;</columnList>
         </task>
      </task-item>
      <task-item name="Bump Chart" active="true">
         <task class="com.dexvis.dex.task.vis.dexjs.BumpChart">
            <config-def>{&quot;bumpchart&quot;:{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;C3 Settings&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Chart Dimensions&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Height&quot;,&quot;description&quot;:&quot;The height of the chart.&quot;,&quot;target&quot;:&quot;height&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:783},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The width of the chart.&quot;,&quot;target&quot;:&quot;width&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:1136},{&quot;name&quot;:&quot;Top Margin&quot;,&quot;description&quot;:&quot;The top margin of the chart.&quot;,&quot;target&quot;:&quot;margin.top&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:50},{&quot;name&quot;:&quot;Bottom Margin&quot;,&quot;description&quot;:&quot;The bottom margin of the chart.&quot;,&quot;target&quot;:&quot;margin.bottom&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:50},{&quot;name&quot;:&quot;Left Margin&quot;,&quot;description&quot;:&quot;Left top margin of the chart.&quot;,&quot;target&quot;:&quot;margin.left&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:140},{&quot;name&quot;:&quot;Right Margin&quot;,&quot;description&quot;:&quot;The right margin of the chart.&quot;,&quot;target&quot;:&quot;margin.right&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:500,&quot;initialValue&quot;:160}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Resizable&quot;,&quot;description&quot;:&quot;This determines whether the chart is resizable or not.&quot;,&quot;target&quot;:&quot;resizable&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Draggable&quot;,&quot;description&quot;:&quot;This determines whether the chart is draggable or not.&quot;,&quot;target&quot;:&quot;draggable&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the chart.&quot;,&quot;target&quot;:&quot;transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Miscellaneous&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Color Scheme&quot;,&quot;description&quot;:&quot;Color Scheme&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;category10&quot;,&quot;category20b&quot;,&quot;category20c&quot;,&quot;category20&quot;,&quot;c64Dark&quot;,&quot;c64Light&quot;,&quot;divergingDark12&quot;,&quot;divergingPastel12&quot;,&quot;hueSoft128&quot;,&quot;hueHard128&quot;,&quot;crayola8&quot;,&quot;crayola120&quot;,&quot;YlGn_3&quot;,&quot;YlGn_4&quot;,&quot;YlGn_5&quot;,&quot;YlGn_6&quot;,&quot;YlGn_7&quot;,&quot;YlGn_8&quot;,&quot;YlGn_9&quot;,&quot;YlGnBu_3&quot;,&quot;YlGnBu_4&quot;,&quot;YlGnBu_5&quot;,&quot;YlGnBu_6&quot;,&quot;YlGnBu_7&quot;,&quot;YlGnBu_8&quot;,&quot;YlGnBu_9&quot;,&quot;GnBu_3&quot;,&quot;GnBu_4&quot;,&quot;GnBu_5&quot;,&quot;GnBu_6&quot;,&quot;GnBu_7&quot;,&quot;GnBu_8&quot;,&quot;GnBu_9&quot;,&quot;BuGn_3&quot;,&quot;BuGn_4&quot;,&quot;BuGn_5&quot;,&quot;BuGn_6&quot;,&quot;BuGn_7&quot;,&quot;BuGn_8&quot;,&quot;BuGn_9&quot;,&quot;PuBuGn_3&quot;,&quot;PuBuGn_4&quot;,&quot;PuBuGn_5&quot;,&quot;PuBuGn_6&quot;,&quot;PuBuGn_7&quot;,&quot;PuBuGn_8&quot;,&quot;PuBuGn_9&quot;,&quot;PuBu_3&quot;,&quot;PuBu_4&quot;,&quot;PuBu_5&quot;,&quot;PuBu_6&quot;,&quot;PuBu_7&quot;,&quot;PuBu_8&quot;,&quot;PuBu_9&quot;,&quot;BuPu_3&quot;,&quot;BuPu_4&quot;,&quot;BuPu_5&quot;,&quot;BuPu_6&quot;,&quot;BuPu_7&quot;,&quot;BuPu_8&quot;,&quot;BuPu_9&quot;,&quot;RdPu_3&quot;,&quot;RdPu_4&quot;,&quot;RdPu_5&quot;,&quot;RdPu_6&quot;,&quot;RdPu_7&quot;,&quot;RdPu_8&quot;,&quot;RdPu_9&quot;,&quot;PuRd_3&quot;,&quot;PuRd_4&quot;,&quot;PuRd_5&quot;,&quot;PuRd_6&quot;,&quot;PuRd_7&quot;,&quot;PuRd_8&quot;,&quot;PuRd_9&quot;,&quot;OrRd_3&quot;,&quot;OrRd_4&quot;,&quot;OrRd_5&quot;,&quot;OrRd_6&quot;,&quot;OrRd_7&quot;,&quot;OrRd_8&quot;,&quot;OrRd_9&quot;,&quot;YlOrRd_3&quot;,&quot;YlOrRd_4&quot;,&quot;YlOrRd_5&quot;,&quot;YlOrRd_6&quot;,&quot;YlOrRd_7&quot;,&quot;YlOrRd_8&quot;,&quot;YlOrRd_9&quot;,&quot;YlOrBr_3&quot;,&quot;YlOrBr_4&quot;,&quot;YlOrBr_5&quot;,&quot;YlOrBr_6&quot;,&quot;YlOrBr_7&quot;,&quot;YlOrBr_8&quot;,&quot;YlOrBr_9&quot;,&quot;Purples_3&quot;,&quot;Purples_4&quot;,&quot;Purples_5&quot;,&quot;Purples_6&quot;,&quot;Purples_7&quot;,&quot;Purples_8&quot;,&quot;Purples_9&quot;,&quot;Blues_3&quot;,&quot;Blues_4&quot;,&quot;Blues_5&quot;,&quot;Blues_6&quot;,&quot;Blues_7&quot;,&quot;Blues_8&quot;,&quot;Blues_9&quot;,&quot;Greens_3&quot;,&quot;Greens_4&quot;,&quot;Greens_5&quot;,&quot;Greens_6&quot;,&quot;Greens_7&quot;,&quot;Greens_8&quot;,&quot;Greens_9&quot;,&quot;Oranges_3&quot;,&quot;Oranges_4&quot;,&quot;Oranges_5&quot;,&quot;Oranges_6&quot;,&quot;Oranges_7&quot;,&quot;Oranges_8&quot;,&quot;Oranges_9&quot;,&quot;Reds_3&quot;,&quot;Reds_4&quot;,&quot;Reds_5&quot;,&quot;Reds_6&quot;,&quot;Reds_7&quot;,&quot;Reds_8&quot;,&quot;Reds_9&quot;,&quot;Greys_3&quot;,&quot;Greys_4&quot;,&quot;Greys_5&quot;,&quot;Greys_6&quot;,&quot;Greys_7&quot;,&quot;Greys_8&quot;,&quot;Greys_9&quot;,&quot;PuOr_3&quot;,&quot;PuOr_4&quot;,&quot;PuOr_5&quot;,&quot;PuOr_6&quot;,&quot;PuOr_7&quot;,&quot;PuOr_8&quot;,&quot;PuOr_9&quot;,&quot;PuOr_10&quot;,&quot;PuOr_11&quot;,&quot;BrBG_3&quot;,&quot;BrBG_4&quot;,&quot;BrBG_5&quot;,&quot;BrBG_6&quot;,&quot;BrBG_7&quot;,&quot;BrBG_8&quot;,&quot;BrBG_9&quot;,&quot;BrBG_10&quot;,&quot;BrBG_11&quot;,&quot;PRGn_3&quot;,&quot;PRGn_4&quot;,&quot;PRGn_5&quot;,&quot;PRGn_6&quot;,&quot;PRGn_7&quot;,&quot;PRGn_8&quot;,&quot;PRGn_9&quot;,&quot;PRGn_10&quot;,&quot;PRGn_11&quot;,&quot;PiYG_3&quot;,&quot;PiYG_4&quot;,&quot;PiYG_5&quot;,&quot;PiYG_6&quot;,&quot;PiYG_7&quot;,&quot;PiYG_8&quot;,&quot;PiYG_9&quot;,&quot;PiYG_10&quot;,&quot;PiYG_11&quot;,&quot;RdBu_3&quot;,&quot;RdBu_4&quot;,&quot;RdBu_5&quot;,&quot;RdBu_6&quot;,&quot;RdBu_7&quot;,&quot;RdBu_8&quot;,&quot;RdBu_9&quot;,&quot;RdBu_10&quot;,&quot;RdBu_11&quot;,&quot;RdGy_3&quot;,&quot;RdGy_4&quot;,&quot;RdGy_5&quot;,&quot;RdGy_6&quot;,&quot;RdGy_7&quot;,&quot;RdGy_8&quot;,&quot;RdGy_9&quot;,&quot;RdGy_10&quot;,&quot;RdGy_11&quot;,&quot;RdYlBu_3&quot;,&quot;RdYlBu_4&quot;,&quot;RdYlBu_5&quot;,&quot;RdYlBu_6&quot;,&quot;RdYlBu_7&quot;,&quot;RdYlBu_8&quot;,&quot;RdYlBu_9&quot;,&quot;RdYlBu_10&quot;,&quot;RdYlBu_11&quot;,&quot;Spectral_3&quot;,&quot;Spectral_4&quot;,&quot;Spectral_5&quot;,&quot;Spectral_6&quot;,&quot;Spectral_7&quot;,&quot;Spectral_8&quot;,&quot;Spectral_9&quot;,&quot;Spectral_10&quot;,&quot;Spectral_11&quot;,&quot;RdYlGn_3&quot;,&quot;RdYlGn_4&quot;,&quot;RdYlGn_5&quot;,&quot;RdYlGn_6&quot;,&quot;RdYlGn_7&quot;,&quot;RdYlGn_8&quot;,&quot;RdYlGn_9&quot;,&quot;RdYlGn_10&quot;,&quot;RdYlGn_11&quot;,&quot;Accent_3&quot;,&quot;Accent_4&quot;,&quot;Accent_5&quot;,&quot;Accent_6&quot;,&quot;Accent_7&quot;,&quot;Accent_8&quot;,&quot;Dark2_3&quot;,&quot;Dark2_4&quot;,&quot;Dark2_5&quot;,&quot;Dark2_6&quot;,&quot;Dark2_7&quot;,&quot;Dark2_8&quot;,&quot;Paired_3&quot;,&quot;Paired_4&quot;,&quot;Paired_5&quot;,&quot;Paired_6&quot;,&quot;Paired_7&quot;,&quot;Paired_8&quot;,&quot;Paired_9&quot;,&quot;Paired_10&quot;,&quot;Paired_11&quot;,&quot;Paired_12&quot;,&quot;Pastel1_3&quot;,&quot;Pastel1_4&quot;,&quot;Pastel1_5&quot;,&quot;Pastel1_6&quot;,&quot;Pastel1_7&quot;,&quot;Pastel1_8&quot;,&quot;Pastel1_9&quot;,&quot;Pastel2_3&quot;,&quot;Pastel2_4&quot;,&quot;Pastel2_5&quot;,&quot;Pastel2_6&quot;,&quot;Pastel2_7&quot;,&quot;Pastel2_8&quot;,&quot;Set1_3&quot;,&quot;Set1_4&quot;,&quot;Set1_5&quot;,&quot;Set1_6&quot;,&quot;Set1_7&quot;,&quot;Set1_8&quot;,&quot;Set1_9&quot;,&quot;Set2_3&quot;,&quot;Set2_4&quot;,&quot;Set2_5&quot;,&quot;Set2_6&quot;,&quot;Set2_7&quot;,&quot;Set2_8&quot;,&quot;Set3_3&quot;,&quot;Set3_4&quot;,&quot;Set3_5&quot;,&quot;Set3_6&quot;,&quot;Set3_7&quot;,&quot;Set3_8&quot;,&quot;Set3_9&quot;,&quot;Set3_10&quot;,&quot;Set3_11&quot;,&quot;Set3_12&quot;],&quot;target&quot;:&quot;colorScheme&quot;,&quot;initialValue&quot;:&quot;category10&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Chart Label&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the text.&quot;,&quot;target&quot;:&quot;chartLabel.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Format&quot;,&quot;description&quot;:&quot;The text format.&quot;,&quot;target&quot;:&quot;chartLabel.format&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Anchor&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;chartLabel.anchor&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;middle&quot;,&quot;start&quot;,&quot;end&quot;],&quot;initialValue&quot;:&quot;middle&quot;},{&quot;name&quot;:&quot;X Offset&quot;,&quot;description&quot;:&quot;The x offset of the text.&quot;,&quot;target&quot;:&quot;chartLabel.dx&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Y Offset&quot;,&quot;description&quot;:&quot;The y offset of the text.&quot;,&quot;target&quot;:&quot;chartLabel.dy&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Text Decoration&quot;,&quot;description&quot;:&quot;The text decoration.&quot;,&quot;target&quot;:&quot;chartLabel.decoration&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;underline&quot;,&quot;overline&quot;,&quot;line-through&quot;,&quot;blink&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Writing Mode&quot;,&quot;description&quot;:&quot;The text writing mode family.&quot;,&quot;target&quot;:&quot;chartLabel.writingMode&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;lr-tb&quot;,&quot;rl-tb&quot;,&quot;tb-rl&quot;,&quot;lr&quot;,&quot;rl&quot;,&quot;tb&quot;],&quot;initialValue&quot;:&quot;inherit&quot;},{&quot;name&quot;:&quot;Text Length&quot;,&quot;description&quot;:&quot;The text length.&quot;,&quot;target&quot;:&quot;chartLabel.textLength&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Length Adjust&quot;,&quot;description&quot;:&quot;The text length adjustment.&quot;,&quot;target&quot;:&quot;chartLabel.lengthAdjust&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;&quot;,&quot;spacing&quot;,&quot;spacingAndGlyphs&quot;],&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Font&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The size of the font.&quot;,&quot;target&quot;:&quot;chartLabel.font.size&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:256,&quot;initialValue&quot;:14},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;chartLabel.font.family&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;courier&quot;,&quot;sans-serif&quot;,&quot;times-roman&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The font style.&quot;,&quot;target&quot;:&quot;chartLabel.font.style&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the font.&quot;,&quot;target&quot;:&quot;weight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Variant&quot;,&quot;description&quot;:&quot;The font variant.&quot;,&quot;target&quot;:&quot;variant&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;inherit&quot;,&quot;small-caps&quot;],&quot;initialValue&quot;:&quot;normal&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;chartLabel.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;steelblue&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;chartLabel.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;chartLabel.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;chartLabel.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Category Label&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the text.&quot;,&quot;target&quot;:&quot;categoryLabel.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Format&quot;,&quot;description&quot;:&quot;The text format.&quot;,&quot;target&quot;:&quot;categoryLabel.format&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Anchor&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;categoryLabel.anchor&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;middle&quot;,&quot;start&quot;,&quot;end&quot;],&quot;initialValue&quot;:&quot;start&quot;},{&quot;name&quot;:&quot;X Offset&quot;,&quot;description&quot;:&quot;The x offset of the text.&quot;,&quot;target&quot;:&quot;categoryLabel.dx&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Y Offset&quot;,&quot;description&quot;:&quot;The y offset of the text.&quot;,&quot;target&quot;:&quot;categoryLabel.dy&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:&quot;.31em&quot;},{&quot;name&quot;:&quot;Text Decoration&quot;,&quot;description&quot;:&quot;The text decoration.&quot;,&quot;target&quot;:&quot;categoryLabel.decoration&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;underline&quot;,&quot;overline&quot;,&quot;line-through&quot;,&quot;blink&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Writing Mode&quot;,&quot;description&quot;:&quot;The text writing mode family.&quot;,&quot;target&quot;:&quot;categoryLabel.writingMode&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;lr-tb&quot;,&quot;rl-tb&quot;,&quot;tb-rl&quot;,&quot;lr&quot;,&quot;rl&quot;,&quot;tb&quot;],&quot;initialValue&quot;:&quot;inherit&quot;},{&quot;name&quot;:&quot;Text Length&quot;,&quot;description&quot;:&quot;The text length.&quot;,&quot;target&quot;:&quot;categoryLabel.textLength&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Length Adjust&quot;,&quot;description&quot;:&quot;The text length adjustment.&quot;,&quot;target&quot;:&quot;categoryLabel.lengthAdjust&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;&quot;,&quot;spacing&quot;,&quot;spacingAndGlyphs&quot;],&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Font&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The size of the font.&quot;,&quot;target&quot;:&quot;categoryLabel.font.size&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:256,&quot;initialValue&quot;:16},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;categoryLabel.font.family&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;courier&quot;,&quot;sans-serif&quot;,&quot;times-roman&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The font style.&quot;,&quot;target&quot;:&quot;categoryLabel.font.style&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the font.&quot;,&quot;target&quot;:&quot;weight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Variant&quot;,&quot;description&quot;:&quot;The font variant.&quot;,&quot;target&quot;:&quot;variant&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;inherit&quot;,&quot;small-caps&quot;],&quot;initialValue&quot;:&quot;normal&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;categoryLabel.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;categoryLabel.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;categoryLabel.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;categoryLabel.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Sequence Labels&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the text.&quot;,&quot;target&quot;:&quot;sequenceLabel.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Format&quot;,&quot;description&quot;:&quot;The text format.&quot;,&quot;target&quot;:&quot;sequenceLabel.format&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Anchor&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;sequenceLabel.anchor&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;middle&quot;,&quot;start&quot;,&quot;end&quot;],&quot;initialValue&quot;:&quot;middle&quot;},{&quot;name&quot;:&quot;X Offset&quot;,&quot;description&quot;:&quot;The x offset of the text.&quot;,&quot;target&quot;:&quot;sequenceLabel.dx&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Y Offset&quot;,&quot;description&quot;:&quot;The y offset of the text.&quot;,&quot;target&quot;:&quot;sequenceLabel.dy&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:-2000,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:&quot;.31em&quot;},{&quot;name&quot;:&quot;Text Decoration&quot;,&quot;description&quot;:&quot;The text decoration.&quot;,&quot;target&quot;:&quot;sequenceLabel.decoration&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;underline&quot;,&quot;overline&quot;,&quot;line-through&quot;,&quot;blink&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Writing Mode&quot;,&quot;description&quot;:&quot;The text writing mode family.&quot;,&quot;target&quot;:&quot;sequenceLabel.writingMode&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;lr-tb&quot;,&quot;rl-tb&quot;,&quot;tb-rl&quot;,&quot;lr&quot;,&quot;rl&quot;,&quot;tb&quot;],&quot;initialValue&quot;:&quot;inherit&quot;},{&quot;name&quot;:&quot;Text Length&quot;,&quot;description&quot;:&quot;The text length.&quot;,&quot;target&quot;:&quot;sequenceLabel.textLength&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:2000,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Length Adjust&quot;,&quot;description&quot;:&quot;The text length adjustment.&quot;,&quot;target&quot;:&quot;sequenceLabel.lengthAdjust&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;&quot;,&quot;spacing&quot;,&quot;spacingAndGlyphs&quot;],&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Font&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The size of the font.&quot;,&quot;target&quot;:&quot;sequenceLabel.font.size&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:256,&quot;initialValue&quot;:32},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;sequenceLabel.font.family&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;courier&quot;,&quot;sans-serif&quot;,&quot;times-roman&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The font style.&quot;,&quot;target&quot;:&quot;sequenceLabel.font.style&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the font.&quot;,&quot;target&quot;:&quot;weight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Variant&quot;,&quot;description&quot;:&quot;The font variant.&quot;,&quot;target&quot;:&quot;variant&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;inherit&quot;,&quot;small-caps&quot;],&quot;initialValue&quot;:&quot;normal&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;sequenceLabel.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;sequenceLabel.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;sequenceLabel.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;sequenceLabel.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Nodes&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Radius&quot;,&quot;description&quot;:&quot;This determines the radius of the circle.&quot;,&quot;target&quot;:&quot;circle.r&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:6},{&quot;name&quot;:&quot;Transform&quot;,&quot;description&quot;:&quot;A transform to be applied to the circle.&quot;,&quot;target&quot;:&quot;circle.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;circle.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;white&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;circle.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;circle.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;circle.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:4},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;circle.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;circle.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;circle.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;circle.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;circle.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;circle.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;circle.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;circle.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Lines&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Fill&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Fill&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;line.fill.fillColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;colors&quot;:[&quot;none&quot;,&quot;black&quot;,&quot;white&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;orange&quot;,&quot;yellow&quot;,&quot;pink&quot;,&quot;gray&quot;,&quot;maroon&quot;,&quot;teal&quot;,&quot;cyan&quot;,&quot;navy&quot;,&quot;steelblue&quot;,&quot;olive&quot;,&quot;silver&quot;],&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Fill Opacity&quot;,&quot;description&quot;:&quot;The text anchor.&quot;,&quot;target&quot;:&quot;line.fill.fillOpacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Fill Rule&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;line.fill.fillRule&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;nonzero&quot;,&quot;evenodd&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;nonzero&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Stroke&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;The fill color or none.&quot;,&quot;target&quot;:&quot;line.stroke.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:3},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;line.stroke.color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;,&quot;black&quot;,&quot;white&quot;,&quot;yellow&quot;,&quot;purple&quot;,&quot;orange&quot;,&quot;pink&quot;,&quot;cyan&quot;,&quot;steelblue&quot;,&quot;grey&quot;],&quot;initialValue&quot;:&quot;black&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The stroke color.&quot;,&quot;target&quot;:&quot;line.stroke.color&quot;,&quot;type&quot;:&quot;color&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;The stroke opacity.&quot;,&quot;target&quot;:&quot;line.stroke.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Dash Array&quot;,&quot;description&quot;:&quot;The stroke dash array.&quot;,&quot;target&quot;:&quot;line.stroke.dasharray&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;transform&quot;,&quot;description&quot;:&quot;The stroke transformation.&quot;,&quot;target&quot;:&quot;line.stroke.transform&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Cap&quot;,&quot;description&quot;:&quot;The line cap.&quot;,&quot;target&quot;:&quot;line.stroke.lineCap&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inherit&quot;,&quot;butt&quot;,&quot;round&quot;,&quot;square&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Line Join&quot;,&quot;description&quot;:&quot;The line join.&quot;,&quot;target&quot;:&quot;line.stroke.lineJoin&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;miter&quot;,&quot;round&quot;,&quot;bevel&quot;,&quot;inherit&quot;],&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Miter Limit&quot;,&quot;description&quot;:&quot;The miter limit.&quot;,&quot;target&quot;:&quot;line.stroke.miterLimit&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:&quot;&quot;}]}]}]}}</config-def>
         </task>
      </task-item>
   </tasks>
</dex-project>