<dex-project version="0.8">
   <tasks class="java.util.ArrayList">
      <task-item name="Documentation" active="true">
         <task class="com.dexvis.dex.task.utilities.Documentation">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <editor>&lt;html dir=&quot;ltr&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body contenteditable=&quot;true&quot;&gt;&lt;h1&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;6&quot;&gt;Decision Tree Training&lt;/font&gt;&lt;/h1&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;4&quot;&gt;This example demonstrates how to train a decision tree model.&lt;/font&gt;&lt;/p&gt;&lt;h2&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;5&quot;&gt;Task Overview&lt;/font&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;&lt;b&gt;Documentation&lt;/b&gt;&amp;nbsp;- This task, which documents the flow.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;b style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;Read CSV&lt;/b&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&amp;nbsp;- Read in our dataset.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;View Data&lt;/b&gt;&amp;nbsp;- A visual checkpoint.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;b style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;Decision Tree&lt;/b&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&amp;nbsp;- Train and visualize our decision tree.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;Calculations&lt;/b&gt;&amp;nbsp;- Add a row number to the data as well as a field which indicates whether or not the prediction was &quot;Correct&quot; or &quot;Incorrect&quot;.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;Select Columns&lt;/b&gt;&amp;nbsp;- Select a subset of the columns for comparison.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;View Data&lt;/b&gt;&amp;nbsp;- A visual checkpoint.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;Compare Prediction&lt;/b&gt;&amp;nbsp;- Visualize the prediction in terms of correct and incorrect.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</editor>
            <docFileText></docFileText>
         </task>
      </task-item>
      <task-item name="Read CSV" active="true">
         <task class="com.dexvis.dex.task.input.ReadCsv">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <fileText>data\iris.csv</fileText>
            <limitRows>false</limitRows>
            <filterCB>false</filterCB>
            <rowLimitText>0</rowLimitText>
            <filter></filter>
            <lastDir></lastDir>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Decision Tree" active="true">
         <task class="com.dexvis.dex.task.ml.classification.DecisionTree">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <columnList>&lt;com.dexvis.simple.types.SimpleListSelectionView&gt;
  &lt;sourceList&gt;
    &lt;string&gt;Species&lt;/string&gt;
  &lt;/sourceList&gt;
  &lt;targetList&gt;
    &lt;string&gt;Sepal Length&lt;/string&gt;
    &lt;string&gt;Sepal Width&lt;/string&gt;
    &lt;string&gt;Petal Length&lt;/string&gt;
    &lt;string&gt;Petal Width&lt;/string&gt;
  &lt;/targetList&gt;
&lt;/com.dexvis.simple.types.SimpleListSelectionView&gt;</columnList>
            <columnName>TRAINED_PREDICTION</columnName>
            <autosave>false</autosave>
            <resultColumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;Sepal Length&lt;/string&gt;
      &lt;string&gt;Sepal Width&lt;/string&gt;
      &lt;string&gt;Petal Length&lt;/string&gt;
      &lt;string&gt;Petal Width&lt;/string&gt;
      &lt;string&gt;Species&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;Species&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</resultColumn>
            <splitRule>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;GINI&lt;/string&gt;
      &lt;string&gt;Entropy&lt;/string&gt;
      &lt;string&gt;Classification Error&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;GINI&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</splitRule>
            <fileText>models\iris.dtree.mdl</fileText>
            <maxNodes>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;min&lt;/string&gt;
    &lt;double&gt;1.0&lt;/double&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;max&lt;/string&gt;
    &lt;double&gt;100.0&lt;/double&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;value&lt;/string&gt;
    &lt;double&gt;4.0&lt;/double&gt;
  &lt;/entry&gt;
&lt;/map&gt;</maxNodes>
         </task>
      </task-item>
      <task-item name="Calculations" active="true">
         <task class="com.dexvis.dex.task.prg.GroovyScript">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <processbytable>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Table&lt;/string&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;boolean&gt;true&lt;/boolean&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbytable>
            <processbyrow>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Row&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbyrow>
            <processbycolumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;text&lt;/string&gt;
    &lt;string&gt;Column&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</processbycolumn>
            <groovyCode class="javafx.beans.property.SimpleStringProperty">def responseIndex = dex.getColumnNumber(&quot;Species&quot;)
def predictionIndex = dex.getColumnNumber(&quot;TRAINED_PREDICTION&quot;)

data.eachWithIndex {
  row, ri -&gt;
  data[ri] &lt;&lt; &quot;&quot; + (ri + 1)
  data[ri] &lt;&lt; ((row[responseIndex] == row[predictionIndex]) ? &quot;Correct&quot; : &quot;Incorrect&quot;)
}

header &lt;&lt; &quot;Prediction Number&quot;
header &lt;&lt; &quot;Status&quot;</groovyCode>
         </task>
      </task-item>
      <task-item name="Select Columns" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.SelectColumns">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <columnList>&lt;com.dexvis.simple.types.SimpleListSelectionView&gt;
  &lt;sourceList/&gt;
  &lt;targetList&gt;
    &lt;string&gt;Status&lt;/string&gt;
    &lt;string&gt;Prediction Number&lt;/string&gt;
    &lt;string&gt;TRAINED_PREDICTION&lt;/string&gt;
    &lt;string&gt;Sepal Length&lt;/string&gt;
    &lt;string&gt;Sepal Width&lt;/string&gt;
    &lt;string&gt;Petal Length&lt;/string&gt;
    &lt;string&gt;Petal Width&lt;/string&gt;
    &lt;string&gt;Species&lt;/string&gt;
  &lt;/targetList&gt;
&lt;/com.dexvis.simple.types.SimpleListSelectionView&gt;</columnList>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="TauCharts ScatterPlot" active="true">
         <task class="com.dexvis.dex.task.vis.taucharts.TauChartsScatterPlot">
            <config-def>{&quot;scatterplot&quot;:{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;TauChart Settings&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Plugins&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Enable Legend&quot;,&quot;description&quot;:&quot;Enable the legend.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;plugins.legend&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Enable Tooltips&quot;,&quot;description&quot;:&quot;Enable tooltips.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;plugins.tooltips&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Enable Quick Filters&quot;,&quot;description&quot;:&quot;Enable the quick filters.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;plugins.quickfilters&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Enable Trend Lines&quot;,&quot;description&quot;:&quot;Enable the trendlines plugin.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;plugins.trendline&quot;,&quot;initialValue&quot;:false}]},{&quot;name&quot;:&quot;Chart Type&quot;,&quot;description&quot;:&quot;The type of chart.&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;scatterplot&quot;,&quot;line&quot;,&quot;area&quot;,&quot;bar&quot;,&quot;horizontal-bar&quot;,&quot;stacked-bar&quot;,&quot;horizontal-stacked-bar&quot;],&quot;target&quot;:&quot;type&quot;,&quot;initialValue&quot;:&quot;scatterplot&quot;},{&quot;name&quot;:&quot;Colormap&quot;,&quot;description&quot;:&quot;Colormap.&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;ECharts&quot;,&quot;category10&quot;,&quot;category20b&quot;,&quot;category20c&quot;,&quot;category20&quot;,&quot;c64Dark&quot;,&quot;c64Light&quot;,&quot;divergingDark12&quot;,&quot;divergingPastel12&quot;,&quot;hueSoft128&quot;,&quot;hueHard128&quot;,&quot;crayola8&quot;,&quot;crayola120&quot;,&quot;YlGn_9&quot;,&quot;YlGnBu_9&quot;,&quot;GnBu_9&quot;,&quot;BuGn_9&quot;,&quot;PuBuGn_9&quot;,&quot;PuBu_9&quot;,&quot;BuPu_9&quot;,&quot;RdPu_9&quot;,&quot;PuRd_9&quot;,&quot;OrRd_9&quot;,&quot;YlOrRd_9&quot;,&quot;YlOrBr_9&quot;,&quot;Purples_9&quot;,&quot;Blues_9&quot;,&quot;Greens_9&quot;,&quot;Oranges_9&quot;,&quot;Reds_9&quot;,&quot;Greys_9&quot;,&quot;PuOr_11&quot;,&quot;BrBG_11&quot;,&quot;PRGn_11&quot;,&quot;PiYG_11&quot;,&quot;RdBu_11&quot;,&quot;RdGy_11&quot;,&quot;RdYlBu_11&quot;,&quot;Spectral_4&quot;,&quot;Spectral_8&quot;,&quot;Spectral_11&quot;,&quot;RdYlGn_11&quot;,&quot;Accent_8&quot;,&quot;Dark2_8&quot;,&quot;Paired_12&quot;,&quot;Pastel1_9&quot;,&quot;Pastel2_8&quot;,&quot;Set1_9&quot;,&quot;Set2_8&quot;,&quot;Set3_12&quot;,&quot;Stop Light&quot;,&quot;White to Red&quot;,&quot;White to Blue&quot;,&quot;Red White and Blue&quot;],&quot;target&quot;:&quot;colormap&quot;,&quot;initialValue&quot;:&quot;category10&quot;},{&quot;name&quot;:&quot;Reverse Colormap&quot;,&quot;description&quot;:&quot;Reverse the colormap?&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;reverseColormap&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Fit Model Settings&quot;,&quot;description&quot;:&quot;Fit settings.&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;minimal&quot;,&quot;entire-view&quot;,&quot;fit-width&quot;,&quot;fit-height&quot;],&quot;target&quot;:&quot;options.settings.fitModel&quot;,&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Fit X-Axis to Data&quot;,&quot;description&quot;:&quot;Fit X-Axis to Data.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;fitXAxis&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Fit Y-Axis to Data&quot;,&quot;description&quot;:&quot;Fit Y-Axis to Data.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;fitYAxis&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;X Density Padding&quot;,&quot;description&quot;:&quot;X Density Padding.&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:50,&quot;target&quot;:&quot;options.settings.xDensityPadding&quot;,&quot;initialValue&quot;:&quot;0.25&quot;},{&quot;name&quot;:&quot;Y Density Padding&quot;,&quot;description&quot;:&quot;Y Density Padding.&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:1,&quot;maxValue&quot;:50,&quot;target&quot;:&quot;options.settings.yDensityPadding&quot;,&quot;initialValue&quot;:&quot;0.25&quot;},{&quot;name&quot;:&quot;Min Size&quot;,&quot;description&quot;:&quot;Minimum Size&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;target&quot;:&quot;options.guide.size.minSize&quot;,&quot;initialValue&quot;:10},{&quot;name&quot;:&quot;Max Size&quot;,&quot;description&quot;:&quot;Maximum Size&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;target&quot;:&quot;options.guide.size.maxSize&quot;,&quot;initialValue&quot;:10},{&quot;name&quot;:&quot;Animation Speed&quot;,&quot;description&quot;:&quot;Animation speed.&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:2000,&quot;target&quot;:&quot;options.settings.animationSpeed&quot;,&quot;initialValue&quot;:&quot;750&quot;},{&quot;name&quot;:&quot;ASynchronous Rendering&quot;,&quot;description&quot;:&quot;Enable asyncrhonous rendering.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;options.settings.asyncRendering&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Fit Model Settings&quot;,&quot;description&quot;:&quot;Fit settings.&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;minimal&quot;,&quot;entire-view&quot;,&quot;fit-width&quot;,&quot;fit-height&quot;],&quot;target&quot;:&quot;options.settings.fitModel&quot;,&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;X-Axis&quot;,&quot;description&quot;:&quot;The X Axis&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;Status&quot;,&quot;Prediction Number&quot;,&quot;TRAINED_PREDICTION&quot;,&quot;Sepal Length&quot;,&quot;Sepal Width&quot;,&quot;Petal Length&quot;,&quot;Petal Width&quot;,&quot;Species&quot;],&quot;target&quot;:&quot;options.x&quot;,&quot;initialValue&quot;:&quot;Prediction Number&quot;},{&quot;name&quot;:&quot;Y-Axis&quot;,&quot;description&quot;:&quot;The Y Axis&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;Status&quot;,&quot;Prediction Number&quot;,&quot;TRAINED_PREDICTION&quot;,&quot;Sepal Length&quot;,&quot;Sepal Width&quot;,&quot;Petal Length&quot;,&quot;Petal Width&quot;,&quot;Species&quot;],&quot;target&quot;:&quot;options.y&quot;,&quot;initialValue&quot;:&quot;TRAINED_PREDICTION&quot;},{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;The color&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;Status&quot;,&quot;Prediction Number&quot;,&quot;TRAINED_PREDICTION&quot;,&quot;Sepal Length&quot;,&quot;Sepal Width&quot;,&quot;Petal Length&quot;,&quot;Petal Width&quot;,&quot;Species&quot;],&quot;target&quot;:&quot;options.color&quot;,&quot;initialValue&quot;:&quot;Status&quot;},{&quot;name&quot;:&quot;Size&quot;,&quot;description&quot;:&quot;Size by.&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;Status&quot;,&quot;Prediction Number&quot;,&quot;TRAINED_PREDICTION&quot;,&quot;Sepal Length&quot;,&quot;Sepal Width&quot;,&quot;Petal Length&quot;,&quot;Petal Width&quot;,&quot;Species&quot;],&quot;target&quot;:&quot;options.size&quot;,&quot;initialValue&quot;:&quot;none&quot;},{&quot;name&quot;:&quot;Split&quot;,&quot;description&quot;:&quot;Split colors/series on.&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;none&quot;,&quot;Status&quot;,&quot;Prediction Number&quot;,&quot;TRAINED_PREDICTION&quot;,&quot;Sepal Length&quot;,&quot;Sepal Width&quot;,&quot;Petal Length&quot;,&quot;Petal Width&quot;,&quot;Species&quot;],&quot;target&quot;:&quot;options.split&quot;}]}}</config-def>
         </task>
      </task-item>
   </tasks>
</dex-project>