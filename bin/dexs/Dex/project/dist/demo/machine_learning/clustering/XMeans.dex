<dex-project version="0.8">
   <tasks class="java.util.ArrayList">
      <task-item name="Documentation" active="true">
         <task class="com.dexvis.dex.task.utilities.Documentation">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <editor>&lt;html dir=&quot;ltr&quot;&gt;&lt;head&gt;&lt;/head&gt;&lt;body contenteditable=&quot;true&quot;&gt;&lt;h1&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;6&quot;&gt;KMeans&lt;/font&gt;&lt;/h1&gt;&lt;p&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;4&quot;&gt;This example demonstrates how to use KMeans for clustering.&lt;/font&gt;&lt;/p&gt;&lt;h2&gt;&lt;font face=&quot;Segoe UI&quot; size=&quot;5&quot;&gt;Task Overview&lt;/font&gt;&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;font face=&quot;Segoe UI&quot;&gt;&lt;b&gt;Documentation&lt;/b&gt;&amp;nbsp;- This task, which documents the flow.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;b style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;Read CSV&lt;/b&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&amp;nbsp;- Read in our dataset.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;View Data&lt;/b&gt;&amp;nbsp;- A visual checkpoint.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;b style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;KFinger&lt;/b&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&amp;nbsp;- Use KFinder to find the optimal value of K.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;Create Age Cluster&amp;nbsp;&lt;/b&gt;- Create a cluster for age.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;View Data&lt;/b&gt;&amp;nbsp;- A visual checkpoint.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &apos;Segoe UI&apos;;&quot;&gt;&lt;b&gt;Decision Tree&lt;/b&gt;&amp;nbsp;- Use a decision tree to gauge the performance of the age cluster.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</editor>
            <docFileText></docFileText>
         </task>
      </task-item>
      <task-item name="Read CSV" active="true">
         <task class="com.dexvis.dex.task.input.ReadCsv">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <fileText>data\kaggle\titanic\train.csv</fileText>
            <limitRows>false</limitRows>
            <filterCB>false</filterCB>
            <rowLimitText>0</rowLimitText>
            <filter></filter>
            <lastDir></lastDir>
         </task>
      </task-item>
      <task-item name="Replace All" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.ReplaceAll">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <replace>[\n&apos;&quot;]</replace>
            <with></with>
         </task>
      </task-item>
      <task-item name="View Data" active="true">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="XMeans" active="true">
         <task class="com.dexvis.dex.task.ml.clustering.XMeans">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <columnList>&lt;com.dexvis.simple.types.SimpleListSelectionView&gt;
  &lt;sourceList&gt;
    &lt;string&gt;PassengerId&lt;/string&gt;
    &lt;string&gt;Name&lt;/string&gt;
    &lt;string&gt;Ticket&lt;/string&gt;
    &lt;string&gt;Cabin&lt;/string&gt;
    &lt;string&gt;Embarked&lt;/string&gt;
    &lt;string&gt;Survived&lt;/string&gt;
    &lt;string&gt;Age&lt;/string&gt;
    &lt;string&gt;Sex&lt;/string&gt;
    &lt;string&gt;Pclass&lt;/string&gt;
    &lt;string&gt;Fare&lt;/string&gt;
  &lt;/sourceList&gt;
  &lt;targetList&gt;
    &lt;string&gt;Parch&lt;/string&gt;
    &lt;string&gt;SibSp&lt;/string&gt;
  &lt;/targetList&gt;
&lt;/com.dexvis.simple.types.SimpleListSelectionView&gt;</columnList>
            <columnName>RELATION_CLUSTER</columnName>
            <maxClusters>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;min&lt;/string&gt;
    &lt;double&gt;1.0&lt;/double&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;max&lt;/string&gt;
    &lt;double&gt;100.0&lt;/double&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;value&lt;/string&gt;
    &lt;double&gt;9.0&lt;/double&gt;
  &lt;/entry&gt;
&lt;/map&gt;</maxClusters>
         </task>
      </task-item>
      <task-item name="View Data" active="false">
         <task class="com.dexvis.dex.task.utilities.ViewData">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Decision Tree" active="false">
         <task class="com.dexvis.dex.task.ml.classification.DecisionTree">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <columnList>&lt;com.dexvis.simple.types.SimpleListSelectionView&gt;
  &lt;sourceList&gt;
    &lt;string&gt;PassengerId&lt;/string&gt;
    &lt;string&gt;Survived&lt;/string&gt;
    &lt;string&gt;Pclass&lt;/string&gt;
    &lt;string&gt;Name&lt;/string&gt;
    &lt;string&gt;Sex&lt;/string&gt;
    &lt;string&gt;Age&lt;/string&gt;
    &lt;string&gt;SibSp&lt;/string&gt;
    &lt;string&gt;Parch&lt;/string&gt;
    &lt;string&gt;Ticket&lt;/string&gt;
    &lt;string&gt;Fare&lt;/string&gt;
    &lt;string&gt;Cabin&lt;/string&gt;
    &lt;string&gt;Embarked&lt;/string&gt;
  &lt;/sourceList&gt;
  &lt;targetList&gt;
    &lt;string&gt;RELATION_CLUSTER&lt;/string&gt;
  &lt;/targetList&gt;
&lt;/com.dexvis.simple.types.SimpleListSelectionView&gt;</columnList>
            <columnName>DTREE_PREDICTION</columnName>
            <autosave>true</autosave>
            <resultColumn>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;PassengerId&lt;/string&gt;
      &lt;string&gt;Survived&lt;/string&gt;
      &lt;string&gt;Pclass&lt;/string&gt;
      &lt;string&gt;Name&lt;/string&gt;
      &lt;string&gt;Sex&lt;/string&gt;
      &lt;string&gt;Age&lt;/string&gt;
      &lt;string&gt;SibSp&lt;/string&gt;
      &lt;string&gt;Parch&lt;/string&gt;
      &lt;string&gt;Ticket&lt;/string&gt;
      &lt;string&gt;Fare&lt;/string&gt;
      &lt;string&gt;Cabin&lt;/string&gt;
      &lt;string&gt;Embarked&lt;/string&gt;
      &lt;string&gt;RELATION_CLUSTER&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;Survived&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</resultColumn>
            <splitRule>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;items&lt;/string&gt;
    &lt;list&gt;
      &lt;string&gt;GINI&lt;/string&gt;
      &lt;string&gt;Entropy&lt;/string&gt;
      &lt;string&gt;Classification Error&lt;/string&gt;
    &lt;/list&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;selected&lt;/string&gt;
    &lt;string&gt;GINI&lt;/string&gt;
  &lt;/entry&gt;
&lt;/map&gt;</splitRule>
            <fileText>models\xmeans_demo.dtree.mdl</fileText>
            <maxNodes>&lt;map&gt;
  &lt;entry&gt;
    &lt;string&gt;min&lt;/string&gt;
    &lt;double&gt;1.0&lt;/double&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;max&lt;/string&gt;
    &lt;double&gt;100.0&lt;/double&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;string&gt;value&lt;/string&gt;
    &lt;double&gt;10.0&lt;/double&gt;
  &lt;/entry&gt;
&lt;/map&gt;</maxNodes>
         </task>
      </task-item>
      <task-item name="Add Row Number" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.AddRowNumber">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
         </task>
      </task-item>
      <task-item name="Select Columns" active="true">
         <task class="com.dexvis.dex.task.tablemanipulation.SelectColumns">
            <config-def>[ { &quot;type&quot; : &quot;label&quot;, &quot;initialValue&quot;: &quot;No configuration is available&quot; } ]</config-def>
            <columnList>&lt;com.dexvis.simple.types.SimpleListSelectionView&gt;
  &lt;sourceList&gt;
    &lt;string&gt;PassengerId&lt;/string&gt;
    &lt;string&gt;Pclass&lt;/string&gt;
    &lt;string&gt;Name&lt;/string&gt;
    &lt;string&gt;Sex&lt;/string&gt;
    &lt;string&gt;Age&lt;/string&gt;
    &lt;string&gt;SibSp&lt;/string&gt;
    &lt;string&gt;Ticket&lt;/string&gt;
    &lt;string&gt;Fare&lt;/string&gt;
    &lt;string&gt;Cabin&lt;/string&gt;
    &lt;string&gt;Embarked&lt;/string&gt;
  &lt;/sourceList&gt;
  &lt;targetList&gt;
    &lt;string&gt;RELATION_CLUSTER&lt;/string&gt;
    &lt;string&gt;Survived&lt;/string&gt;
    &lt;string&gt;RI&lt;/string&gt;
    &lt;string&gt;Parch&lt;/string&gt;
  &lt;/targetList&gt;
&lt;/com.dexvis.simple.types.SimpleListSelectionView&gt;</columnList>
         </task>
      </task-item>
      <task-item name="ECharts Line Chart Multiples" active="true">
         <task class="com.dexvis.dex.task.vis.dexjs.multiples.echarts.EChartsLineChartMultiples">
            <config-def>{&quot;multiples&quot;:{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Multiples Configuration&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Cell Dimensions&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Cell Height&quot;,&quot;description&quot;:&quot;Cell Height&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:50,&quot;maxValue&quot;:1600,&quot;step&quot;:10,&quot;initialValue&quot;:200,&quot;target&quot;:&quot;cell.height&quot;},{&quot;name&quot;:&quot;Cell Width&quot;,&quot;description&quot;:&quot;Cell Width&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:50,&quot;maxValue&quot;:2000,&quot;step&quot;:10,&quot;initialValue&quot;:300,&quot;target&quot;:&quot;cell.width&quot;}]},{&quot;name&quot;:&quot;Group By&quot;,&quot;description&quot;:&quot;Pick the columns on which to categorize or group the multiples by.&quot;,&quot;type&quot;:&quot;multiple-choice&quot;,&quot;choices&quot;:[&quot;RELATION_CLUSTER&quot;,&quot;Survived&quot;,&quot;RI&quot;,&quot;Parch&quot;],&quot;initialValue&quot;:&quot;&quot;,&quot;target&quot;:&quot;groupBy&quot;},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;EChart Line Chart Settings&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;General Options&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Title&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text&quot;,&quot;description&quot;:&quot;The text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.text&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Sub Text&quot;,&quot;description&quot;:&quot;The subtext.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.subtext&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Item Gap&quot;,&quot;description&quot;:&quot;The gap between the Text and Subtext.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.itemGap&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:10},{&quot;name&quot;:&quot;Link&quot;,&quot;description&quot;:&quot;An optional hyperlink.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.link&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Link Target&quot;,&quot;description&quot;:&quot;A tab target to open hyperlink in.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.target&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Sub Link&quot;,&quot;description&quot;:&quot;An optional hyperlink.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.sublink&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Sub Link Target&quot;,&quot;description&quot;:&quot;A tab target to open hyperlink in.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.subtarget&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Text Alignment&quot;,&quot;description&quot;:&quot;Setting the title text align horizontally, supporting &apos;left&apos;,&apos;center&apos;,&apos;right&apos;, the default value is based on the title position.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.textAlign&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;left&quot;,&quot;center&quot;,&quot;right&quot;],&quot;initialValue&quot;:&quot;center&quot;},{&quot;name&quot;:&quot;Text Baseline&quot;,&quot;description&quot;:&quot;Setting the title text align vertically, supporting &apos;top&apos;,&apos;middle&apos;,&apos;bottom&apos;, the default value is based on the title position.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.textBaseline&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;top&quot;,&quot;middle&quot;,&quot;bottom&quot;],&quot;initialValue&quot;:&quot;top&quot;},{&quot;name&quot;:&quot;Padding&quot;,&quot;description&quot;:&quot;The padding around the title.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.padding&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:5},{&quot;name&quot;:&quot;Left&quot;,&quot;description&quot;:&quot;Left offset of the title.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.left&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1000,&quot;initialValue&quot;:20},{&quot;name&quot;:&quot;Right&quot;,&quot;description&quot;:&quot;Right offset of the title.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.right&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1000,&quot;initialValue&quot;:20},{&quot;name&quot;:&quot;Top&quot;,&quot;description&quot;:&quot;Top offset of the title.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.top&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1000,&quot;initialValue&quot;:20},{&quot;name&quot;:&quot;Bottom&quot;,&quot;description&quot;:&quot;Bottom offset of the title.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.bottom&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1000,&quot;initialValue&quot;:20},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Item Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;Color.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#aaaaaa&quot;},{&quot;name&quot;:&quot;Border Color&quot;,&quot;description&quot;:&quot;Border color.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.borderColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#aaaaaa&quot;},{&quot;name&quot;:&quot;Border Type&quot;,&quot;description&quot;:&quot;Border type.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.borderType&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;solid&quot;,&quot;dashed&quot;,&quot;dotted&quot;],&quot;initialValue&quot;:&quot;solid&quot;},{&quot;name&quot;:&quot;Border Width&quot;,&quot;description&quot;:&quot;Border Width.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.borderWidth&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Shadow Blur&quot;,&quot;description&quot;:&quot;Shadow blur.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.shadowBlur&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Shadow Color&quot;,&quot;description&quot;:&quot;Shadow color.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.shadowColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Shadow Offset X&quot;,&quot;description&quot;:&quot;Offset distance on the horizontal direction of shadow.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.shadowOffsetX&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:-20,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Shadow Offset X&quot;,&quot;description&quot;:&quot;Offset distance on the vertical direction of shadow.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.shadowOffsetX&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:-20,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;Opacity.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.textStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.textStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.textStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.textStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.textStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Subtext Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.subtextStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.subtextStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.subtextStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.subtextStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.options.title.subtextStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Grid&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Grid&quot;,&quot;description&quot;:&quot;Show or hide grid lines.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Left Margin&quot;,&quot;description&quot;:&quot;Gap between axis name and axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.left&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:300,&quot;initialValue&quot;:50},{&quot;name&quot;:&quot;Right Margin&quot;,&quot;description&quot;:&quot;Gap between axis name and axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.right&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:300,&quot;initialValue&quot;:15},{&quot;name&quot;:&quot;Top Margin&quot;,&quot;description&quot;:&quot;Gap between axis name and axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.top&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:300,&quot;initialValue&quot;:20},{&quot;name&quot;:&quot;Bottom&quot;,&quot;description&quot;:&quot;Gap between axis name and axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.bottom&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:300,&quot;initialValue&quot;:30},{&quot;name&quot;:&quot;Background Color&quot;,&quot;description&quot;:&quot;The color of the background.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.backgroundColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#FFFFFF&quot;},{&quot;name&quot;:&quot;Border Color&quot;,&quot;description&quot;:&quot;The color of the border.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.borderColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#FFFFFF&quot;},{&quot;name&quot;:&quot;Border Width&quot;,&quot;description&quot;:&quot;The border width (in pixels).&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.borderWidth&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Contains Label&quot;,&quot;description&quot;:&quot;Set to true in order to accommodate dynamic label sizes.&quot;,&quot;target&quot;:&quot;model.attributes.options.grid.containsLabel&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Tooltips&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.textStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.textStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.textStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.textStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.textStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;name&quot;:&quot;Trigger&quot;,&quot;description&quot;:&quot;Whether the tooltip is triggered by axis location or by item.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.trigger&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;item&quot;,&quot;axis&quot;,&quot;none&quot;],&quot;initialValue&quot;:&quot;item&quot;},{&quot;name&quot;:&quot;Formatter&quot;,&quot;description&quot;:&quot;The text format variables {a}-{d}.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.formatter&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Background Color&quot;,&quot;description&quot;:&quot;The background color of the tooltip.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.backgroundColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#FFFFFF&quot;},{&quot;name&quot;:&quot;Border Color&quot;,&quot;description&quot;:&quot;The border color of the tooltip.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.borderColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Border Width&quot;,&quot;description&quot;:&quot;The border width.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.borderWidth&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:100,&quot;initialValue&quot;:2},{&quot;name&quot;:&quot;Padding&quot;,&quot;description&quot;:&quot;The border width.&quot;,&quot;target&quot;:&quot;model.attributes.options.tooltip.borderWidth&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:2}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Symbols&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Symbols&quot;,&quot;description&quot;:&quot;Determines whether or not to symbols.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;model.attributes.series.showSymbol&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Symbol Shape&quot;,&quot;description&quot;:&quot;The shape of the symbol.&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;circle&quot;,&quot;rect&quot;,&quot;roundRect&quot;,&quot;triangle&quot;,&quot;diamond&quot;,&quot;pin&quot;,&quot;arrow&quot;],&quot;target&quot;:&quot;model.attributes.series.symbol&quot;,&quot;initialValue&quot;:&quot;circle&quot;},{&quot;name&quot;:&quot;Symbol Size&quot;,&quot;description&quot;:&quot;The size of the symbols&quot;,&quot;type&quot;:&quot;int&quot;,&quot;target&quot;:&quot;model.attributes.series.symbolSize&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:10},{&quot;name&quot;:&quot;Show All Symbols&quot;,&quot;description&quot;:&quot;Determines whether or not to show all symbols.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;model.attributes.series.showAllSymbol&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Symbol Rotate&quot;,&quot;description&quot;:&quot;The rotation of the symbols&quot;,&quot;type&quot;:&quot;int&quot;,&quot;target&quot;:&quot;model.attributes.series.symbolRotate&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:360,&quot;initialValue&quot;:0}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Dimensions&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Series&quot;,&quot;description&quot;:&quot;Series value.&quot;,&quot;target&quot;:&quot;model.attributes.dimensions.series&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[],&quot;initialValue&quot;:null},{&quot;name&quot;:&quot;X&quot;,&quot;description&quot;:&quot;X value.&quot;,&quot;target&quot;:&quot;model.attributes.dimensions.x&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[],&quot;initialValue&quot;:null},{&quot;name&quot;:&quot;Y&quot;,&quot;description&quot;:&quot;Y value.&quot;,&quot;target&quot;:&quot;model.attributes.dimensions.y&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[],&quot;initialValue&quot;:null}]},{&quot;name&quot;:&quot;Color Scheme&quot;,&quot;description&quot;:&quot;The color scheme.&quot;,&quot;target&quot;:&quot;model.attributes.palette&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;ECharts&quot;,&quot;category10&quot;,&quot;category20b&quot;,&quot;category20c&quot;,&quot;category20&quot;,&quot;c64Dark&quot;,&quot;c64Light&quot;,&quot;divergingDark12&quot;,&quot;divergingPastel12&quot;,&quot;hueSoft128&quot;,&quot;hueHard128&quot;,&quot;crayola8&quot;,&quot;crayola120&quot;,&quot;YlGn_9&quot;,&quot;YlGnBu_9&quot;,&quot;GnBu_9&quot;,&quot;BuGn_9&quot;,&quot;PuBuGn_9&quot;,&quot;PuBu_9&quot;,&quot;BuPu_9&quot;,&quot;RdPu_9&quot;,&quot;PuRd_9&quot;,&quot;OrRd_9&quot;,&quot;YlOrRd_9&quot;,&quot;YlOrBr_9&quot;,&quot;Purples_9&quot;,&quot;Blues_9&quot;,&quot;Greens_9&quot;,&quot;Oranges_9&quot;,&quot;Reds_9&quot;,&quot;Greys_9&quot;,&quot;PuOr_11&quot;,&quot;BrBG_11&quot;,&quot;PRGn_11&quot;,&quot;PiYG_11&quot;,&quot;RdBu_11&quot;,&quot;RdGy_11&quot;,&quot;RdYlBu_11&quot;,&quot;Spectral_4&quot;,&quot;Spectral_8&quot;,&quot;Spectral_11&quot;,&quot;RdYlGn_11&quot;,&quot;Accent_8&quot;,&quot;Dark2_8&quot;,&quot;Paired_12&quot;,&quot;Pastel1_9&quot;,&quot;Pastel2_8&quot;,&quot;Set1_9&quot;,&quot;Set2_8&quot;,&quot;Set3_12&quot;,&quot;Stop Light&quot;,&quot;White to Red&quot;,&quot;White to Blue&quot;,&quot;Red White and Blue&quot;],&quot;initialValue&quot;:&quot;ECharts&quot;},{&quot;name&quot;:&quot;Display Legend&quot;,&quot;description&quot;:&quot;Determines whether or not to draw the legend or not.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;model.attributes.options.legend.show&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Background Color&quot;,&quot;description&quot;:&quot;The color of the background.&quot;,&quot;target&quot;:&quot;model.attributes.options.backgroundColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#FFFFFD&quot;},{&quot;name&quot;:&quot;Series Type&quot;,&quot;description&quot;:&quot;The series type&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;target&quot;:&quot;model.attributes.series.type&quot;,&quot;choices&quot;:[&quot;line&quot;,&quot;scatter&quot;,&quot;effectScatter&quot;,&quot;bar&quot;],&quot;initialValue&quot;:&quot;line&quot;},{&quot;name&quot;:&quot;Stack Series&quot;,&quot;description&quot;:&quot;Stack the series or not.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;model.attributes.series.stack&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Clip Overflow&quot;,&quot;description&quot;:&quot;Clip overflow.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;model.attributes.series.clipOverflow&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Connect Nulls&quot;,&quot;description&quot;:&quot;Connect nulls.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;model.attributes.series.connectNulls&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Step&quot;,&quot;description&quot;:&quot;Stack the series or not.&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;target&quot;:&quot;model.attributes.series.step&quot;,&quot;initialValue&quot;:false}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Labels&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Label: Normal&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.textStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.textStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.textStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.textStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.textStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;name&quot;:&quot;Show Label&quot;,&quot;description&quot;:&quot;Show or hide the label.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Position&quot;,&quot;description&quot;:&quot;Position of the label.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.position&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;top&quot;,&quot;left&quot;,&quot;right&quot;,&quot;bottom&quot;,&quot;inside&quot;,&quot;insideLeft&quot;,&quot;insideRight&quot;,&quot;insideTop&quot;,&quot;insideBottom&quot;,&quot;insideLeftTop&quot;,&quot;insideLeftBottom&quot;,&quot;insideRightTop&quot;,&quot;insideRightBottom&quot;],&quot;initialValue&quot;:&quot;top&quot;},{&quot;name&quot;:&quot;Formatter&quot;,&quot;description&quot;:&quot;Formatter of the label. Ex: none, comma-delimited, succinct&quot;,&quot;target&quot;:&quot;model.attributes.series.label.normal.formatter&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Label: Emphasis&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.textStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.textStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.textStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.textStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.textStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;name&quot;:&quot;Show Label&quot;,&quot;description&quot;:&quot;Show or hide the label.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Position&quot;,&quot;description&quot;:&quot;Position of the label.&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.position&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;top&quot;,&quot;left&quot;,&quot;right&quot;,&quot;bottom&quot;,&quot;inside&quot;,&quot;insideLeft&quot;,&quot;insideRight&quot;,&quot;insideTop&quot;,&quot;insideBottom&quot;,&quot;insideLeftTop&quot;,&quot;insideLeftBottom&quot;,&quot;insideRightTop&quot;,&quot;insideRightBottom&quot;],&quot;initialValue&quot;:&quot;top&quot;},{&quot;name&quot;:&quot;Formatter&quot;,&quot;description&quot;:&quot;Formatter of the label. Ex: none, comma-delimited, succinct&quot;,&quot;target&quot;:&quot;model.attributes.series.label.emphasis.formatter&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Axis&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;X Axis&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Axis&quot;,&quot;description&quot;:&quot;Show or hide the axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Data Min&quot;,&quot;description&quot;:&quot;Set axis minimum boundary to the minimum data value.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.min&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Data Max&quot;,&quot;description&quot;:&quot;Set axis maximum boundary to the maximum data value.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.max&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Scale&quot;,&quot;description&quot;:&quot;It specifies whether not to contain zero position of axis compulsively.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.scale&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.name&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Name Location&quot;,&quot;description&quot;:&quot;The location of the axis name.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameLocation&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;start&quot;,&quot;middle&quot;,&quot;end&quot;],&quot;initialValue&quot;:&quot;end&quot;},{&quot;name&quot;:&quot;Name Gap&quot;,&quot;description&quot;:&quot;Gap between axis name and axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameGap&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:15},{&quot;name&quot;:&quot;Name Rotate&quot;,&quot;description&quot;:&quot;Rotation of axis name.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameRotate&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:360,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Name Inverse&quot;,&quot;description&quot;:&quot;Whether to inverse the name or not.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameInverse&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Split Number&quot;,&quot;description&quot;:&quot;The suggested number of segments that the axis is split into.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.splitNumber&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:2},{&quot;name&quot;:&quot;Boundary Gap&quot;,&quot;description&quot;:&quot;The boundary gap on both sides of a coordinate axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.boundaryGap&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Interactive&quot;,&quot;description&quot;:&quot;Set axis to silent (non-interactive) or not.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.silent&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameTextStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameTextStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameTextStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameTextStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.nameTextStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Axis Line&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Line&quot;,&quot;description&quot;:&quot;Show or hide the axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;On Zero&quot;,&quot;description&quot;:&quot;Specifies whether X or Y axis lies on the other&apos;s origin position, where value is 0 on axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.onZero&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Line Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;Line color.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.lineStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;Line Width.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.lineStyle.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Shadow Blur&quot;,&quot;description&quot;:&quot;Shadow blur.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.lineStyle.shadowBlur&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Shadow Color&quot;,&quot;description&quot;:&quot;Shadow color.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.lineStyle.shadowColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;Opacity.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.lineStyle.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Curveness&quot;,&quot;description&quot;:&quot;Curveness.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLine.lineStyle.curveness&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Axis Ticks&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Ticks&quot;,&quot;description&quot;:&quot;Show or hide the axis ticks.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Align With Label&quot;,&quot;description&quot;:&quot;Align the tick with the label?&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.alignWithLabel&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Inside&quot;,&quot;description&quot;:&quot;Specifies whether the axis label faces Inside.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.inside&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Length&quot;,&quot;description&quot;:&quot;The length (in pixels) of the ticks.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.length&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:5},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Line Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;Line color.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.lineStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;Line Width.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.lineStyle.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Shadow Blur&quot;,&quot;description&quot;:&quot;Shadow blur.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.lineStyle.shadowBlur&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Shadow Color&quot;,&quot;description&quot;:&quot;Shadow color.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.lineStyle.shadowColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;Opacity.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.lineStyle.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Curveness&quot;,&quot;description&quot;:&quot;Curveness.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisTick.lineStyle.curveness&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Label&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Label&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.textStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.textStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.textStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.textStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.textStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;name&quot;:&quot;Show Label&quot;,&quot;description&quot;:&quot;Show or hide the label.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Position&quot;,&quot;description&quot;:&quot;Position of the label.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.position&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;top&quot;,&quot;left&quot;,&quot;right&quot;,&quot;bottom&quot;,&quot;inside&quot;,&quot;insideLeft&quot;,&quot;insideRight&quot;,&quot;insideTop&quot;,&quot;insideBottom&quot;,&quot;insideLeftTop&quot;,&quot;insideLeftBottom&quot;,&quot;insideRightTop&quot;,&quot;insideRightBottom&quot;],&quot;initialValue&quot;:&quot;top&quot;},{&quot;name&quot;:&quot;Formatter&quot;,&quot;description&quot;:&quot;Formatter of the label. Ex: none, comma-delimited, succinct&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.formatter&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;name&quot;:&quot;Interval&quot;,&quot;description&quot;:&quot;Interval at which to label ticks.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.interval&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Inside&quot;,&quot;description&quot;:&quot;Specifies whether the axis label faces Inside.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.inside&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Name Rotate&quot;,&quot;description&quot;:&quot;Rotation of labels.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.rotate&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:360,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Margin&quot;,&quot;description&quot;:&quot;The margin of the labels.&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.margin&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:8},{&quot;name&quot;:&quot;Show Min Label&quot;,&quot;description&quot;:&quot;Show the minimum label?&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.showMinLabel&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Show Max Label&quot;,&quot;description&quot;:&quot;Show the maximum label?&quot;,&quot;target&quot;:&quot;model.attributes.options.xAxis.axisLabel.showMaxLabel&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;X Axis Data Zoom&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.xAxisDataZoom.nameTextStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.xAxisDataZoom.nameTextStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.xAxisDataZoom.nameTextStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.xAxisDataZoom.nameTextStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.xAxisDataZoom.nameTextStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;name&quot;:&quot;Show Data Zoom&quot;,&quot;description&quot;:&quot;Show or hide the data zoom.&quot;,&quot;target&quot;:&quot;model.attributes.xAxisDataZoom.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Zoom Type&quot;,&quot;description&quot;:&quot;The type of data zoom.&quot;,&quot;target&quot;:&quot;model.attributes.xAxisDataZoom.type&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inside&quot;,&quot;slider&quot;],&quot;initialValue&quot;:&quot;slider&quot;}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Y Axis&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Axis&quot;,&quot;description&quot;:&quot;Show or hide the axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Data Min&quot;,&quot;description&quot;:&quot;Set axis minimum boundary to the minimum data value.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.min&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Data Max&quot;,&quot;description&quot;:&quot;Set axis maximum boundary to the maximum data value.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.max&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Scale&quot;,&quot;description&quot;:&quot;It specifies whether not to contain zero position of axis compulsively.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.scale&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Name&quot;,&quot;description&quot;:&quot;The name of the axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.name&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;},{&quot;name&quot;:&quot;Name Location&quot;,&quot;description&quot;:&quot;The location of the axis name.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameLocation&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;start&quot;,&quot;middle&quot;,&quot;end&quot;],&quot;initialValue&quot;:&quot;end&quot;},{&quot;name&quot;:&quot;Name Gap&quot;,&quot;description&quot;:&quot;Gap between axis name and axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameGap&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:15},{&quot;name&quot;:&quot;Name Rotate&quot;,&quot;description&quot;:&quot;Rotation of axis name.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameRotate&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:360,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Name Inverse&quot;,&quot;description&quot;:&quot;Whether to inverse the name or not.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameInverse&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Split Number&quot;,&quot;description&quot;:&quot;The suggested number of segments that the axis is split into.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.splitNumber&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:2},{&quot;name&quot;:&quot;Boundary Gap&quot;,&quot;description&quot;:&quot;The boundary gap on both sides of a coordinate axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.boundaryGap&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Interactive&quot;,&quot;description&quot;:&quot;Set axis to silent (non-interactive) or not.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.silent&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameTextStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameTextStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameTextStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameTextStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.nameTextStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Axis Line&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Line&quot;,&quot;description&quot;:&quot;Show or hide the axis line.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;On Zero&quot;,&quot;description&quot;:&quot;Specifies whether X or Y axis lies on the other&apos;s origin position, where value is 0 on axis.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.onZero&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Line Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;Line color.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.lineStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;Line Width.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.lineStyle.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Shadow Blur&quot;,&quot;description&quot;:&quot;Shadow blur.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.lineStyle.shadowBlur&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Shadow Color&quot;,&quot;description&quot;:&quot;Shadow color.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.lineStyle.shadowColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;Opacity.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.lineStyle.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Curveness&quot;,&quot;description&quot;:&quot;Curveness.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLine.lineStyle.curveness&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Axis Ticks&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Show Ticks&quot;,&quot;description&quot;:&quot;Show or hide the axis ticks.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:true},{&quot;name&quot;:&quot;Align With Label&quot;,&quot;description&quot;:&quot;Align the tick with the label?&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.alignWithLabel&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Inside&quot;,&quot;description&quot;:&quot;Specifies whether the axis label faces Inside.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.inside&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Length&quot;,&quot;description&quot;:&quot;The length (in pixels) of the ticks.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.length&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:5},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Line Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Color&quot;,&quot;description&quot;:&quot;Line color.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.lineStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Width&quot;,&quot;description&quot;:&quot;Line Width.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.lineStyle.width&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:10,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Shadow Blur&quot;,&quot;description&quot;:&quot;Shadow blur.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.lineStyle.shadowBlur&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:20,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Shadow Color&quot;,&quot;description&quot;:&quot;Shadow color.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.lineStyle.shadowColor&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#000000&quot;},{&quot;name&quot;:&quot;Opacity&quot;,&quot;description&quot;:&quot;Opacity.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.lineStyle.opacity&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Curveness&quot;,&quot;description&quot;:&quot;Curveness.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisTick.lineStyle.curveness&quot;,&quot;type&quot;:&quot;float&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:1,&quot;initialValue&quot;:0}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Label&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Label&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.textStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.textStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.textStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.textStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.textStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;name&quot;:&quot;Show Label&quot;,&quot;description&quot;:&quot;Show or hide the label.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Position&quot;,&quot;description&quot;:&quot;Position of the label.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.position&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;top&quot;,&quot;left&quot;,&quot;right&quot;,&quot;bottom&quot;,&quot;inside&quot;,&quot;insideLeft&quot;,&quot;insideRight&quot;,&quot;insideTop&quot;,&quot;insideBottom&quot;,&quot;insideLeftTop&quot;,&quot;insideLeftBottom&quot;,&quot;insideRightTop&quot;,&quot;insideRightBottom&quot;],&quot;initialValue&quot;:&quot;top&quot;},{&quot;name&quot;:&quot;Formatter&quot;,&quot;description&quot;:&quot;Formatter of the label. Ex: none, comma-delimited, succinct&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.formatter&quot;,&quot;type&quot;:&quot;string&quot;,&quot;initialValue&quot;:&quot;&quot;}]},{&quot;name&quot;:&quot;Interval&quot;,&quot;description&quot;:&quot;Interval at which to label ticks.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.interval&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:50,&quot;initialValue&quot;:1},{&quot;name&quot;:&quot;Inside&quot;,&quot;description&quot;:&quot;Specifies whether the axis label faces Inside.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.inside&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Name Rotate&quot;,&quot;description&quot;:&quot;Rotation of labels.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.rotate&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:360,&quot;initialValue&quot;:0},{&quot;name&quot;:&quot;Margin&quot;,&quot;description&quot;:&quot;The margin of the labels.&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.margin&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:200,&quot;initialValue&quot;:8},{&quot;name&quot;:&quot;Show Min Label&quot;,&quot;description&quot;:&quot;Show the minimum label?&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.showMinLabel&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Show Max Label&quot;,&quot;description&quot;:&quot;Show the maximum label?&quot;,&quot;target&quot;:&quot;model.attributes.options.yAxis.axisLabel.showMaxLabel&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false}]}]},{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Y Axis Data Zoom&quot;,&quot;contents&quot;:[{&quot;type&quot;:&quot;group&quot;,&quot;name&quot;:&quot;Text Style&quot;,&quot;contents&quot;:[{&quot;name&quot;:&quot;Text Color&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.yAxisDataZoom.nameTextStyle.color&quot;,&quot;type&quot;:&quot;color&quot;,&quot;initialValue&quot;:&quot;#ffffff&quot;},{&quot;name&quot;:&quot;Font Style&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.yAxisDataZoom.nameTextStyle.fontStyle&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;italic&quot;,&quot;oblique&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Weight&quot;,&quot;description&quot;:&quot;The weight of the text.&quot;,&quot;target&quot;:&quot;model.attributes.yAxisDataZoom.nameTextStyle.fontWeight&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;normal&quot;,&quot;bold&quot;,&quot;bolder&quot;,&quot;lighter&quot;,&quot;100&quot;,&quot;200&quot;,&quot;300&quot;,&quot;400&quot;,&quot;500&quot;,&quot;600&quot;,&quot;700&quot;,&quot;800&quot;,&quot;900&quot;],&quot;initialValue&quot;:&quot;normal&quot;},{&quot;name&quot;:&quot;Font Family&quot;,&quot;description&quot;:&quot;The color of the text.&quot;,&quot;target&quot;:&quot;model.attributes.yAxisDataZoom.nameTextStyle.fontFamily&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;sans-serif&quot;,&quot;arial&quot;,&quot;courier&quot;,&quot;courier new&quot;,&quot;arial narrow&quot;,&quot;allegro&quot;,&quot;lucidia console&quot;,&quot;lucida sans&quot;,&quot;times&quot;,&quot;arial rounded mt bold&quot;,&quot;monospace&quot;],&quot;initialValue&quot;:&quot;sans-serif&quot;},{&quot;name&quot;:&quot;Font Size&quot;,&quot;description&quot;:&quot;The font family.&quot;,&quot;target&quot;:&quot;model.attributes.yAxisDataZoom.nameTextStyle.fontSize&quot;,&quot;type&quot;:&quot;int&quot;,&quot;minValue&quot;:0,&quot;maxValue&quot;:128,&quot;initialValue&quot;:12}]},{&quot;name&quot;:&quot;Show Data Zoom&quot;,&quot;description&quot;:&quot;Show or hide the data zoom.&quot;,&quot;target&quot;:&quot;model.attributes.yAxisDataZoom.show&quot;,&quot;type&quot;:&quot;boolean&quot;,&quot;initialValue&quot;:false},{&quot;name&quot;:&quot;Zoom Type&quot;,&quot;description&quot;:&quot;The type of data zoom.&quot;,&quot;target&quot;:&quot;model.attributes.yAxisDataZoom.type&quot;,&quot;type&quot;:&quot;choice&quot;,&quot;choices&quot;:[&quot;inside&quot;,&quot;slider&quot;],&quot;initialValue&quot;:&quot;slider&quot;}]}]}]}]}}</config-def>
         </task>
      </task-item>
   </tasks>
</dex-project>